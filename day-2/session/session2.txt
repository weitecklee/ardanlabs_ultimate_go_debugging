(dlv) continue main.go:33
Breakpoint 1 set at 0x6fbde61 for main.produceValues() ./main.go:33
> [Breakpoint 1] main.produceValues() ./main.go:33 (hits goroutine(9):1 total:1) (PC: 0x6fbde61)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
(dlv) list -5
Showing /Users/weitecklee/coding/ardanlabs/ultimate_go_debugging/day-2/session/main.go:28 (PC: 0x0)
    23:	func produceValues(ctx context.Context, wg *sync.WaitGroup, ch chan<- packet) {
    24:		// Let WaitGroup know we're finished executing.
    25:		defer wg.Done()
    26:		// Create a bytes buffer of length 64.
    27:		buf := make([]byte, 1<<6)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
(dlv) args
ctx = context.Context(*context.cancelCtx) 0xc000094f98
wg = (*sync.WaitGroup)(0xc000012110)
ch = chan<- main.packet 0/0
(dlv) locals
buf = []uint8 len: 64, cap: 64, [...]
id = 609304846661988109
(dlv) print buf[0]
0
(dlv) print buf[1]
0
(dlv) print buf[2:16]
[]uint8 len: 14, cap: 14, [0,0,0,0,0,0,0,0,0,0,0,0,0,0]
(dlv) help display
Print value of an expression every time the program stops.

	display -a [%format] <expression>
	display -d <number>

The '-a' option adds an expression to the list of expression printed every time the program stops. The '-d' option removes the specified expression from the list.

If display is called without arguments it will print the value of all expression in the list.
(dlv) print id
609304846661988109
(dlv) display -a id
0: id = 609304846661988109
(dlv) next
> main.produceValues() ./main.go:37 (PC: 0x6fbded7)
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
=>  37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
0: id = 609304846661988109
(dlv) next
> main.produceValues() ./main.go:39 (PC: 0x6fbdf26)
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
=>  39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:42 (PC: 0x6fbdf46)
    37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
=>  42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
    46:			id -= 16
    47:	
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:38 (PC: 0x6fbdf96)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:39 (PC: 0x6fbdfa8)
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
=>  39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:42 (PC: 0x6fbdfb8)
    37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
=>  42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
    46:			id -= 16
    47:	
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:38 (PC: 0x6fbdfd8)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:42 (PC: 0x6fbe026)
    37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
=>  42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
    46:			id -= 16
    47:	
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:46 (PC: 0x6fbe035)
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
    44:			}
    45:	
=>  46:			id -= 16
    47:	
    48:			// Sleep 0.5 seconds.
    49:			time.Sleep(10 * time.Millisecond)
    50:		}
    51:	}
0: id = 609304846661988109
(dlv) 
> main.produceValues() ./main.go:49 (PC: 0x6fbe03b)
    44:			}
    45:	
    46:			id -= 16
    47:	
    48:			// Sleep 0.5 seconds.
=>  49:			time.Sleep(10 * time.Millisecond)
    50:		}
    51:	}
    52:	
    53:	func consumeValues(ctx context.Context, wg *sync.WaitGroup, ch <-chan packet) {
    54:		// Let WaitGroup know we're finished executing.
0: id = 609304846661988093
(dlv) 
> main.produceValues() ./main.go:31 (PC: 0x6fbe047)
    26:		// Create a bytes buffer of length 64.
    27:		buf := make([]byte, 1<<6)
    28:	
    29:		for {
    30:			// Create a random ID.
=>  31:			id := rand.Int()
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
0: id = error could not find symbol value for id
(dlv) 
> main.produceValues() ./main.go:33 (PC: 0x6fbde61)
    28:	
    29:		for {
    30:			// Create a random ID.
    31:			id := rand.Int()
    32:			// Read some random data into our buffer.
=>  33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
    38:			select {
0: id = 5170571736912769691
(dlv) display -d 0
(dlv) next
> main.produceValues() ./main.go:37 (PC: 0x6fbded7)
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
=>  37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
(dlv) list
> main.produceValues() ./main.go:37 (PC: 0x6fbded7)
    32:			// Read some random data into our buffer.
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
=>  37:			p := packet{id: id, val: buf}
    38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
(dlv) continue main.go:38
Breakpoint 2 set at 0x6fbdf96 for main.produceValues() ./main.go:38
> [Breakpoint 2] main.produceValues() ./main.go:38 (hits goroutine(9):1 total:1) (PC: 0x6fbdf96)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) print p
main.packet {
	id: 5170571736912769691,
	val: []uint8 len: 64, cap: 64, [176,18,141,6,134,45,155,30,241,239,76,120,146,50,184,106,58,109,72,88,115,225,110,36,187,42,177,198,175,76,162,120,143,170,64,247,58,124,234,136,134,142,109,105,31,69,159,9,253,244,209,24,117,81,99,116,90,151,154,55,135,53,254,211],}
(dlv) print p.id
5170571736912769691
(dlv) print p.val
[]uint8 len: 64, cap: 64, [176,18,141,6,134,45,155,30,241,239,76,120,146,50,184,106,58,109,72,88,115,225,110,36,187,42,177,198,175,76,162,120,143,170,64,247,58,124,234,136,134,142,109,105,31,69,159,9,253,244,209,24,117,81,99,116,90,151,154,55,135,53,254,211]
(dlv) print p.val[0]
176
(dlv) print p.val[0:16]
[]uint8 len: 16, cap: 16, [176,18,141,6,134,45,155,30,241,239,76,120,146,50,184,106]
(dlv) print &p
(*main.packet)(0xc000094e80)
(dlv) help examinemem
Examine raw memory at the given address.

Examine memory:

	examinemem [-fmt <format>] [-count|-len <count>] [-size <size>] <address>
	examinemem [-fmt <format>] [-count|-len <count>] [-size <size>] -x <expression>

Format represents the data format and the value is one of this list (default hex): bin(binary), oct(octal), dec(decimal), hex(hexadecimal).
Length is the number of bytes (default 1) and must be less than or equal to 1000.
Address is the memory location of the target to examine. Please note '-len' is deprecated by '-count and -size'.
Expression can be an integer expression or pointer value of the memory location to examine.

For example:

    x -fmt hex -count 20 -size 1 0xc00008af38
    x -fmt hex -count 20 -size 1 -x 0xc00008af38 + 8
    x -fmt hex -count 20 -size 1 -x &myVar
    x -fmt hex -count 20 -size 1 -x myPtrVar
(dlv) x -fmt hex -count 20 0xc000094e80
0xc000094e80:   0x9b   0x32   0x5c   0x90   0x99   0x8f   0xc1   0x47   
0xc000094e88:   0xc0   0xe0   0x01   0x00   0xc0   0x00   0x00   0x00   
0xc000094e90:   0x40   0x00   0x00   0x00   
(dlv) print p
main.packet {
	id: 5170571736912769691,
	val: []uint8 len: 64, cap: 64, [176,18,141,6,134,45,155,30,241,239,76,120,146,50,184,106,58,109,72,88,115,225,110,36,187,42,177,198,175,76,162,120,143,170,64,247,58,124,234,136,134,142,109,105,31,69,159,9,253,244,209,24,117,81,99,116,90,151,154,55,135,53,254,211],}
(dlv) x -fmt hex -count 32 0xc000094e80
0xc000094e80:   0x9b   0x32   0x5c   0x90   0x99   0x8f   0xc1   0x47   
0xc000094e88:   0xc0   0xe0   0x01   0x00   0xc0   0x00   0x00   0x00   
0xc000094e90:   0x40   0x00   0x00   0x00   0x00   0x00   0x00   0x00   
0xc000094e98:   0x40   0x00   0x00   0x00   0x00   0x00   0x00   0x00   
(dlv) whatis p
main.packet
(dlv) print p.id
5170571736912769691
(dlv) set p.id = 500
(dlv) print p
main.packet {
	id: 500,
	val: []uint8 len: 64, cap: 64, [176,18,141,6,134,45,155,30,241,239,76,120,146,50,184,106,58,109,72,88,115,225,110,36,187,42,177,198,175,76,162,120,143,170,64,247,58,124,234,136,134,142,109,105,31,69,159,9,253,244,209,24,117,81,99,116,90,151,154,55,135,53,254,211],}
(dlv) print p.id
500
(dlv) regs
   Rip = 0x0000000006fbdf96
   Rsp = 0x000000c000094df0
   Rax = 0x000000c000028380
   Rbx = 0x0000000000000040
   Rcx = 0x000000c00001e0c0
   Rdx = 0x0000000000000040
   Rsi = 0x47c18f99905c329b
   Rdi = 0x000000c000094d20
   Rbp = 0x000000c000094f80
    R8 = 0x000000c000180008
    R9 = 0x000000c0000ba568
   R10 = 0x000000c0000ba560
   R11 = 0x000000c0000ba564
   R12 = 0x000000c000094d20
   R13 = 0x0000000000000010
   R14 = 0x000000c000007dc0
   R15 = 0x0000000000000001
Rflags = 0x0000000000000202	[IF IOPL=0]
    Cs = 0x000000000000002b
    Fs = 0x0000000000000000
    Gs = 0x0000000000000000

(dlv) regs -a
   Rip = 0x0000000006fbdf96
   Rsp = 0x000000c000094df0
   Rax = 0x000000c000028380
   Rbx = 0x0000000000000040
   Rcx = 0x000000c00001e0c0
   Rdx = 0x0000000000000040
   Rsi = 0x47c18f99905c329b
   Rdi = 0x000000c000094d20
   Rbp = 0x000000c000094f80
    R8 = 0x000000c000180008
    R9 = 0x000000c0000ba568
   R10 = 0x000000c0000ba560
   R11 = 0x000000c0000ba564
   R12 = 0x000000c000094d20
   R13 = 0x0000000000000010
   R14 = 0x000000c000007dc0
   R15 = 0x0000000000000001
  XMM0 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM0h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM1 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM1h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM2 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM2h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM3 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM3h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM4 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM4h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM5 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM5h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM6 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM6h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM7 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM7h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM8 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM8h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
  XMM9 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM9h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 XMM10 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM10h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 XMM11 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM11h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 XMM12 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM12h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 XMM13 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM13h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 XMM14 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM14h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 XMM15 = 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
	[YMM15h] 0x00000000000000000000000000000000	v2_int={ 0000000000000000 0000000000000000 }	v4_int={ 00000000 00000000 00000000 00000000 }	v8_int={ 0000 0000 0000 0000 0000 0000 0000 0000 }	v16_int={ 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 }	v2_float={ 0 0 }	v4_float={ 0 0 0 0 }
 ST(0) = 0x7fff0000000000000000	-Inf
 ST(1) = 0x00000000000000000000	0
 ST(2) = 0x00000000000000000000	0
 ST(3) = 0x00000000000000000000	0
 ST(4) = 0x00000000000000000000	0
 ST(5) = 0x7fff0000000000000000	-Inf
 ST(6) = 0x7fff0000000003a0ff42	-Inf
 ST(7) = 0x7fff00000000ffffc9e0	-Inf
Rflags = 0x0000000000000202	[IF IOPL=0]
    Cs = 0x000000000000002b
    Fs = 0x0000000000000000
    Gs = 0x0000000000000000
 MXCSR = 0x00001f80	[RZ/RN=0 PM UM OM ZM DM IM]

(dlv) goroutines
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
  Goroutine 2 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [force gc (idle)]
  Goroutine 3 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC sweep wait]
  Goroutine 4 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [finalizer wait]
  Goroutine 6 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [select]
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
* Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
  Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
[10 goroutines]
(dlv) list
> main.produceValues() ./main.go:38 (PC: 0x6fbdf96)
    33:			if _, err := rand.Read(buf); err != nil {
    34:				panic(err)
    35:			}
    36:			// Create a packet struct to send over the channel.
    37:			p := packet{id: id, val: buf}
=>  38:			select {
    39:			case <-ctx.Done():
    40:				// If the context has been cancelled, return.
    41:				return
    42:			case ch <- p:
    43:				// Do nothing.
(dlv) help goroutines
List program goroutines.

	goroutines [-u|-r|-g|-s] [-t [depth]] [-l] [-with loc expr] [-without loc expr] [-group argument] [-chan expr] [-exec command]

Print out info for every goroutine. The flag controls what information is shown along with each goroutine:

	-u	displays location of topmost stackframe in user code (default)
	-r	displays location of topmost stackframe (including frames inside private runtime functions)
	-g	displays location of go instruction that created the goroutine
	-s	displays location of the start function
	-t	displays goroutine's stacktrace (an optional depth value can be specified, default: 10)
	-l	displays goroutine's labels

If no flag is specified the default is -u, i.e. the first frame within the first 30 frames that is not executing a runtime private function.

FILTERING

If -with or -without are specified only goroutines that match the given condition are returned.

To only display goroutines where the specified location contains (or does not contain, for -without and -wo) expr as a substring, use:

	goroutines -with (userloc|curloc|goloc|startloc) expr
	goroutines -w (userloc|curloc|goloc|startloc) expr
	goroutines -without (userloc|curloc|goloc|startloc) expr
	goroutines -wo (userloc|curloc|goloc|startloc) expr

	Where:
	userloc: filter by the location of the topmost stackframe in user code
	curloc: filter by the location of the topmost stackframe (including frames inside private runtime functions)
	goloc: filter by the location of the go instruction that created the goroutine
	startloc: filter by the location of the start function
	
To only display goroutines that have (or do not have) the specified label key and value, use:

	goroutines -with label key=value
	goroutines -without label key=value
	
To only display goroutines that have (or do not have) the specified label key, use:

	goroutines -with label key
	goroutines -without label key
	
To only display goroutines that are running (or are not running) on a OS thread, use:


	goroutines -with running
	goroutines -without running
	
To only display user (or runtime) goroutines, use:

	goroutines -with user
	goroutines -without user

CHANNELS
	
To only show goroutines waiting to send to or receive from a specific channel use:

	goroutines -chan expr
	
Note that 'expr' must not contain spaces.

GROUPING

	goroutines -group (userloc|curloc|goloc|startloc|running|user)

	Where:
	userloc: groups goroutines by the location of the topmost stackframe in user code
	curloc: groups goroutines by the location of the topmost stackframe
	goloc: groups goroutines by the location of the go instruction that created the goroutine
	startloc: groups goroutines by the location of the start function
	running: groups goroutines by whether they are running or not
	user: groups goroutines by weather they are user or runtime goroutines


Groups goroutines by the given location, running status or user classification, up to 5 goroutines per group will be displayed as well as the total number of goroutines in the group.

	goroutines -group label key

Groups goroutines by the value of the label with the specified key.

EXEC

	goroutines -exec <command>

Runs the command on every goroutine.

(dlv) goroutines
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
  Goroutine 2 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [force gc (idle)]
  Goroutine 3 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC sweep wait]
  Goroutine 4 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [finalizer wait]
  Goroutine 6 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [select]
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
* Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
  Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
[10 goroutines]
(dlv) goroutines -w user
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
* Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
  Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
[5 goroutines]
(dlv) goroutines -w user -exec stack
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006f270e5 in [1mruntime.goparkunlock[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:430[0m
2  0x0000000006f39a6d in [1mruntime.semacquire1[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1msema.go:178[0m
3  0x0000000006f5c565 in [1msync.runtime_Semacquire[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1msema.go:71[0m
4  0x0000000006f6b6ab in [1msync.(*WaitGroup).Wait[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/sync/[1mwaitgroup.go:118[0m
5  0x0000000006fbee54 in [1mmain.main[0m
   at ./[1mmain.go:118[0m
6  0x0000000006f26c87 in [1mruntime.main[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:272[0m
7  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
0  0x0000000006f604a8 in [1mruntime.systemstack_switch[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:479[0m
1  0x0000000006f450c5 in [1mruntime.libcCall[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1msys_libc.go:49[0m
2  0x0000000006f4482e in [1mruntime.read[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1msys_darwin.go:300[0m
3  0x0000000006f213f8 in [1mruntime.sigNoteSleep[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mos_darwin.go:133[0m
4  0x0000000006f5cac5 in [1mos/signal.signal_recv[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1msigqueue.go:149[0m
5  0x0000000006fbdad7 in [1mos/signal.loop[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/os/signal/[1msignal_unix.go:23[0m
6  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006ef2e6f in [1mruntime.chanrecv[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mchan.go:639[0m
2  0x0000000006ef2b72 in [1mruntime.chanrecv1[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mchan.go:489[0m
3  0x0000000006fbf025 in [1mmain.main.func1[0m
   at ./[1mmain.go:97[0m
4  0x0000000006fbefc2 in [1mmain.main.gowrap1[0m
   at ./[1mmain.go:103[0m
5  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
* Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
0  0x0000000006fbdf96 in [1mmain.produceValues[0m
   at ./[1mmain.go:38[0m
1  0x0000000006fbef4f in [1mmain.main.gowrap2[0m
   at ./[1mmain.go:112[0m
2  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
  Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006f38da5 in [1mruntime.selectgo[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mselect.go:335[0m
2  0x0000000006fbe2e5 in [1mmain.consumeValues[0m
   at ./[1mmain.go:60[0m
3  0x0000000006fbeecf in [1mmain.main.gowrap3[0m
   at ./[1mmain.go:115[0m
4  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
[5 goroutines]
(dlv) goroutine
Thread 47743397 at ./main.go:38
Goroutine 9:
	Runtime: ./main.go:38 main.produceValues (0x6fbdf96)
	User: ./main.go:38 main.produceValues (0x6fbdf96)
	Go: ./main.go:112 main.main (0x6fbed38)
	Start: ./main.go:23 main.produceValues (0x6fbdd60)
(dlv) goroutines
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
  Goroutine 2 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [force gc (idle)]
  Goroutine 3 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC sweep wait]
  Goroutine 4 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [finalizer wait]
  Goroutine 6 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [select]
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
* Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
  Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
[10 goroutines]
(dlv) goroutine 10 list
Goroutine 10 frame 0 at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 0x6f5b4fc)
   420:		mp.waitTraceBlockReason = traceReason
   421:		mp.waitTraceSkip = traceskip
   422:		releasem(mp)
   423:		// can't do anything that might move the G between Ms here.
   424:		mcall(park_m)
=> 425:	}
   426:	
   427:	// Puts the current goroutine into a waiting state and unlocks the lock.
   428:	// The goroutine can be made runnable again by calling goready(gp).
   429:	func goparkunlock(lock *mutex, reason waitReason, traceReason traceBlockReason, traceskip int) {
   430:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceReason, traceskip)
(dlv) goroutine 10 bt
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006f38da5 in [1mruntime.selectgo[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mselect.go:335[0m
2  0x0000000006fbe2e5 in [1mmain.consumeValues[0m
   at ./[1mmain.go:60[0m
3  0x0000000006fbeecf in [1mmain.main.gowrap3[0m
   at ./[1mmain.go:115[0m
4  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
(dlv) threads
  Thread 47741541 at :0
  Thread 47743392 at :0
  Thread 47743393 at :0
  Thread 47743394 at :0
  Thread 47743395 at :0
  Thread 47743396 at :0
* Thread 47743397 at 0x6fbdf96 ./main.go:38 main.produceValues
  Thread 47758419 at :0
(dlv) help threads
Print out info for every traced thread.
(dlv) thread
(dlv) thread 47758419
Switched from 47743397 to 47758419
(dlv) threads
  Thread 47741541 at :0
  Thread 47743392 at :0
  Thread 47743393 at :0
  Thread 47743394 at :0
  Thread 47743395 at :0
  Thread 47743396 at :0
  Thread 47743397 at 0x6fbdf96 ./main.go:38 main.produceValues
* Thread 47758419 at :0
(dlv) goroutines
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
  Goroutine 2 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [force gc (idle)]
  Goroutine 3 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC sweep wait]
  Goroutine 4 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [finalizer wait]
  Goroutine 6 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [select]
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
  Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
  Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
[10 goroutines]
(dlv) goroutine 10
Switched from 0 to 10 (thread 47758419)
(dlv) goroutines
  Goroutine 1 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go:71 sync.runtime_Semacquire (0x6f5c565) [semacquire]
  Goroutine 2 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [force gc (idle)]
  Goroutine 3 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC sweep wait]
  Goroutine 4 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [GC scavenge wait]
  Goroutine 5 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [finalizer wait]
  Goroutine 6 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 runtime.gopark (0x6f5b4fc) [select]
  Goroutine 7 - User: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go:149 os/signal.signal_recv (0x6f5cac5)
  Goroutine 8 - User: ./main.go:97 main.main.func1 (0x6fbf025) [chan receive]
  Goroutine 9 - User: ./main.go:38 main.produceValues (0x6fbdf96) (thread 47743397)
* Goroutine 10 - User: ./main.go:60 main.consumeValues (0x6fbe2e5) [select]
[10 goroutines]
(dlv) help stack
Print stack trace.

	[goroutine <n>] [frame <m>] stack [<depth>] [-full] [-offsets] [-defer] [-a <n>] [-adepth <depth>] [-mode <mode>]

	-full		every stackframe is decorated with the value of its local variables and arguments.
	-offsets	prints frame offset of each frame.
	-defer		prints deferred function call stack for each frame.
	-a <n>		prints stacktrace of n ancestors of the selected goroutine (target process must have tracebackancestors enabled)
	-adepth <depth>	configures depth of ancestor stacktrace
	-mode <mode>	specifies the stacktrace mode, possible values are:
			normal	- attempts to automatically switch between cgo frames and go frames
			simple	- disables automatic switch between cgo and go
			fromg	- starts from the registers stored in the runtime.g struct

(dlv) stack
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006f38da5 in [1mruntime.selectgo[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mselect.go:335[0m
2  0x0000000006fbe2e5 in [1mmain.consumeValues[0m
   at ./[1mmain.go:60[0m
3  0x0000000006fbeecf in [1mmain.main.gowrap3[0m
   at ./[1mmain.go:115[0m
4  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
(dlv) up
> runtime.gopark() /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 0x6f5b4fc)
Warning: debugging optimized function
Frame 1: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/select.go:335 (PC: 6f38da5)
   330:		// Signal to anyone trying to shrink our stack that we're about
   331:		// to park on a channel. The window between when this G's status
   332:		// changes and when we set gp.activeStackChans is not safe for
   333:		// stack shrinking.
   334:		gp.parkingOnChan.Store(true)
=> 335:		gopark(selparkcommit, nil, waitReasonSelect, traceBlockSelect, 1)
   336:		gp.activeStackChans = false
   337:	
   338:		sellock(scases, lockorder)
   339:	
   340:		gp.selectDone.Store(0)
(dlv) up
> runtime.gopark() /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 0x6f5b4fc)
Warning: debugging optimized function
Frame 2: ./main.go:60 (PC: 6fbe2e5)
    55:		defer wg.Done()
    56:	
    57:		// Create buffer to store values in-memory.
    58:		buf := make([]packet, 0)
    59:		for {
=>  60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
    64:			case pkt := <-ch:
    65:				// Store data in our buffer.
(dlv) bt
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006f38da5 in [1mruntime.selectgo[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mselect.go:335[0m
2  0x0000000006fbe2e5 in [1mmain.consumeValues[0m
   at ./[1mmain.go:60[0m
3  0x0000000006fbeecf in [1mmain.main.gowrap3[0m
   at ./[1mmain.go:115[0m
4  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
(dlv) list
Goroutine 10 frame 2 at /Users/weitecklee/coding/ardanlabs/ultimate_go_debugging/day-2/session/main.go:60 (PC: 0x6fbe2e5)
    55:		defer wg.Done()
    56:	
    57:		// Create buffer to store values in-memory.
    58:		buf := make([]packet, 0)
    59:		for {
=>  60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
    64:			case pkt := <-ch:
    65:				// Store data in our buffer.
(dlv) print buf
[]main.packet len: 1, cap: 1, [
	{
		id: 609304846661988109,
		val: []uint8 len: 64, cap: 64, [176,18,141,6,134,45,155,30,241,239,76,120,146,50,184,106,58,109,72,88,115,225,110,36,187,42,177,198,175,76,162,120,143,170,64,247,58,124,234,136,134,142,109,105,31,69,159,9,253,244,209,24,117,81,99,116,90,151,154,55,135,53,254,211],},
]
(dlv) print buf[0].id
609304846661988109
(dlv) down
> runtime.gopark() /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 0x6f5b4fc)
Warning: debugging optimized function
Frame 1: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/select.go:335 (PC: 6f38da5)
   330:		// Signal to anyone trying to shrink our stack that we're about
   331:		// to park on a channel. The window between when this G's status
   332:		// changes and when we set gp.activeStackChans is not safe for
   333:		// stack shrinking.
   334:		gp.parkingOnChan.Store(true)
=> 335:		gopark(selparkcommit, nil, waitReasonSelect, traceBlockSelect, 1)
   336:		gp.activeStackChans = false
   337:	
   338:		sellock(scases, lockorder)
   339:	
   340:		gp.selectDone.Store(0)
(dlv) down
> runtime.gopark() /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 0x6f5b4fc)
Warning: debugging optimized function
Frame 0: /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 6f5b4fc)
   420:		mp.waitTraceBlockReason = traceReason
   421:		mp.waitTraceSkip = traceskip
   422:		releasem(mp)
   423:		// can't do anything that might move the G between Ms here.
   424:		mcall(park_m)
=> 425:	}
   426:	
   427:	// Puts the current goroutine into a waiting state and unlocks the lock.
   428:	// The goroutine can be made runnable again by calling goready(gp).
   429:	func goparkunlock(lock *mutex, reason waitReason, traceReason traceBlockReason, traceskip int) {
   430:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceReason, traceskip)
(dlv) down
(dlv) bt
0  0x0000000006f5b4fc in [1mruntime.gopark[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mproc.go:425[0m
1  0x0000000006f38da5 in [1mruntime.selectgo[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1mselect.go:335[0m
2  0x0000000006fbe2e5 in [1mmain.consumeValues[0m
   at ./[1mmain.go:60[0m
3  0x0000000006fbeecf in [1mmain.main.gowrap3[0m
   at ./[1mmain.go:115[0m
4  0x0000000006f62361 in [1mruntime.goexit[0m
   at /usr/local/Cellar/go/1.23.0/libexec/src/runtime/[1masm_amd64.s:1700[0m
(dlv) frame 2 list
Goroutine 10 frame 2 at /Users/weitecklee/coding/ardanlabs/ultimate_go_debugging/day-2/session/main.go:60 (PC: 0x6fbe2e5)
    55:		defer wg.Done()
    56:	
    57:		// Create buffer to store values in-memory.
    58:		buf := make([]packet, 0)
    59:		for {
=>  60:			select {
    61:			case <-ctx.Done():
    62:				// If the context has been cancelled, return.
    63:				return
    64:			case pkt := <-ch:
    65:				// Store data in our buffer.
(dlv) frame 2 print buf[0].id
609304846661988109
(dlv) list
> runtime.gopark() /usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go:425 (PC: 0x6f5b4fc)
Warning: debugging optimized function
   420:		mp.waitTraceBlockReason = traceReason
   421:		mp.waitTraceSkip = traceskip
   422:		releasem(mp)
   423:		// can't do anything that might move the G between Ms here.
   424:		mcall(park_m)
=> 425:	}
   426:	
   427:	// Puts the current goroutine into a waiting state and unlocks the lock.
   428:	// The goroutine can be made runnable again by calling goready(gp).
   429:	func goparkunlock(lock *mutex, reason waitReason, traceReason traceBlockReason, traceskip int) {
   430:		gopark(parkunlock_c, unsafe.Pointer(lock), reason, traceReason, traceskip)
(dlv) funcs
_rt0_amd64
_rt0_amd64_darwin
aeshashbody
bytes.Contains
bytes.Equal
bytes.Index
bytes.IndexByte
bytes.init
callRet
cmp.Compare[go.shape.float64]
cmp.Compare[go.shape.int64]
cmp.Compare[go.shape.string]
cmp.Compare[go.shape.uint64]
cmp.Compare[go.shape.uintptr]
cmp.isNaN[go.shape.float64]
cmp.isNaN[go.shape.int64]
cmp.isNaN[go.shape.string]
cmp.isNaN[go.shape.uint64]
cmp.isNaN[go.shape.uintptr]
cmpbody
context.(*backgroundCtx).Done
context.(*backgroundCtx).Err
context.(*backgroundCtx).String
context.(*backgroundCtx).Value
context.(*cancelCtx).Done
context.(*cancelCtx).Done.deferwrap1
context.(*cancelCtx).Err
context.(*cancelCtx).String
context.(*cancelCtx).Value
context.(*cancelCtx).cancel
context.(*cancelCtx).propagateCancel
context.(*cancelCtx).propagateCancel.func1
context.(*cancelCtx).propagateCancel.func2
context.(*emptyCtx).Done
context.(*emptyCtx).Err
context.(*emptyCtx).Value
context.(*stopCtx).Done
context.(*stopCtx).Err
context.(*stopCtx).Value
context.Background
context.Cause
context.Cause.deferwrap1
context.WithCancel
context.WithCancel.func1
context.backgroundCtx.Done
context.backgroundCtx.Err
context.backgroundCtx.String
context.backgroundCtx.Value
context.contextName
context.emptyCtx.Done
context.emptyCtx.Err
context.emptyCtx.Value
context.init
context.init.0
context.parentCancelCtx
context.removeChild
context.stopCtx.Done
context.stopCtx.Err
context.stopCtx.Value
context.value
context.withCancel
debugCall1024
debugCall128
debugCall16384
debugCall2048
debugCall256
debugCall32
debugCall32768
debugCall4096
debugCall512
debugCall64
debugCall65536
debugCall8192
encoding/binary.init
encoding/binary.littleEndian.Uint64
errors.(*errorString).Error
errors.Is
errors.New
errors.init
errors.is
fmt.(*buffer).write
fmt.(*buffer).writeByte
fmt.(*buffer).writeRune
fmt.(*buffer).writeString
fmt.(*fmt).clearflags
fmt.(*fmt).fmtBoolean
fmt.(*fmt).fmtBs
fmt.(*fmt).fmtBx
fmt.(*fmt).fmtC
fmt.(*fmt).fmtFloat
fmt.(*fmt).fmtInteger
fmt.(*fmt).fmtQ
fmt.(*fmt).fmtQc
fmt.(*fmt).fmtS
fmt.(*fmt).fmtSbx
fmt.(*fmt).fmtSx
fmt.(*fmt).fmtUnicode
fmt.(*fmt).init
fmt.(*fmt).pad
fmt.(*fmt).padString
fmt.(*fmt).truncate
fmt.(*fmt).truncateString
fmt.(*fmt).writePadding
fmt.(*pp).Write
fmt.(*pp).argNumber
fmt.(*pp).badArgNum
fmt.(*pp).badVerb
fmt.(*pp).catchPanic
fmt.(*pp).doPrintf
fmt.(*pp).doPrintln
fmt.(*pp).fmt0x64
fmt.(*pp).fmtBool
fmt.(*pp).fmtBytes
fmt.(*pp).fmtComplex
fmt.(*pp).fmtFloat
fmt.(*pp).fmtInteger
fmt.(*pp).fmtPointer
fmt.(*pp).fmtString
fmt.(*pp).free
fmt.(*pp).handleMethods
fmt.(*pp).handleMethods.deferwrap1
fmt.(*pp).handleMethods.deferwrap2
fmt.(*pp).handleMethods.deferwrap3
fmt.(*pp).handleMethods.deferwrap4
fmt.(*pp).missingArg
fmt.(*pp).printArg
fmt.(*pp).printValue
fmt.(*pp).unknownType
fmt.Fprintf
fmt.Fprintln
fmt.Printf
fmt.Println
fmt.getField
fmt.init
fmt.init.func1
fmt.intFromArg
fmt.newPrinter
fmt.parseArgNumber
fmt.parsenum
fmt.tooLarge
gcWriteBarrier
gogo
gosave_systemstack_switch
indexbody
indexbytebody
internal/abi.(*FuncType).InSlice
internal/abi.(*FuncType).IsVariadic
internal/abi.(*FuncType).Len
internal/abi.(*FuncType).NumOut
internal/abi.(*FuncType).OutSlice
internal/abi.(*IntArgRegBitmap).Get
internal/abi.(*IntArgRegBitmap).Set
internal/abi.(*InterfaceType).NumMethod
internal/abi.(*Kind).String
internal/abi.(*MapType).HashMightPanic
internal/abi.(*MapType).IndirectElem
internal/abi.(*MapType).IndirectKey
internal/abi.(*MapType).NeedKeyUpdate
internal/abi.(*MapType).ReflexiveKey
internal/abi.(*RegArgs).IntRegArgAddr
internal/abi.(*StructField).Embedded
internal/abi.(*Type).Align
internal/abi.(*Type).ArrayType
internal/abi.(*Type).Common
internal/abi.(*Type).Elem
internal/abi.(*Type).ExportedMethods
internal/abi.(*Type).IfaceIndir
internal/abi.(*Type).Kind
internal/abi.(*Type).Len
internal/abi.(*Type).NumMethod
internal/abi.(*Type).Pointers
internal/abi.(*Type).Size
internal/abi.(*Type).Uncommon
internal/abi.(*UncommonType).ExportedMethods
internal/abi.Kind.String
internal/abi.Name.Data
internal/abi.Name.DataChecked
internal/abi.Name.HasTag
internal/abi.Name.IsBlank
internal/abi.Name.IsEmbedded
internal/abi.Name.IsExported
internal/abi.Name.Name
internal/abi.Name.ReadVarint
internal/abi.Name.Tag
internal/abi.NewName
internal/abi.NoEscape
internal/abi.TypeOf
internal/abi.UseInterfaceSwitchCache
internal/abi.addChecked
internal/abi.writeVarint
internal/bisect.(*Matcher).MarkerOnly
internal/bisect.(*Matcher).ShouldEnable
internal/bisect.(*Matcher).ShouldPrint
internal/bisect.(*Matcher).Stack
internal/bisect.(*Matcher).matchResult
internal/bisect.(*Matcher).stack
internal/bisect.(*dedup).seen
internal/bisect.(*dedup).seenLossy
internal/bisect.(*parseError).Error
internal/bisect.AppendMarker
internal/bisect.Hash
internal/bisect.New
internal/bisect.PrintMarker
internal/bisect.appendFileLine
internal/bisect.fnv
internal/bisect.fnvString
internal/bisect.fnvUint32
internal/bisect.fnvUint64
internal/bisect.printStack
internal/bytealg.Cutover
internal/bytealg.HashStr[go.shape.[]uint8]
internal/bytealg.Index
internal/bytealg.IndexByte
internal/bytealg.IndexByteString
internal/bytealg.IndexRabinKarp[go.shape.[]uint8]
internal/bytealg.init.0
internal/byteorder.LeUint64
internal/chacha8rand.(*State).Init
internal/chacha8rand.(*State).Init64
internal/chacha8rand.(*State).Next
internal/chacha8rand.(*State).Refill
internal/chacha8rand.(*State).Reseed
internal/chacha8rand.block
internal/cpu.Initialize
internal/cpu.cpuid
internal/cpu.doinit
internal/cpu.getGOAMD64level
internal/cpu.indexByte
internal/cpu.isSet
internal/cpu.processOptions
internal/cpu.xgetbv
internal/filepathlite.Base
internal/filepathlite.FromSlash
internal/filepathlite.IsPathSeparator
internal/filepathlite.VolumeName
internal/filepathlite.init
internal/filepathlite.volumeNameLen
internal/fmtsort.Sort
internal/fmtsort.Sort.func1
internal/fmtsort.compare
internal/fmtsort.nilCompare
internal/godebug.(*Setting).IncNonDefault
internal/godebug.(*Setting).IncNonDefault-fm
internal/godebug.(*Setting).Name
internal/godebug.(*Setting).Undocumented
internal/godebug.(*Setting).Value
internal/godebug.(*Setting).Value.func1
internal/godebug.(*Setting).register
internal/godebug.(*Setting).register-fm
internal/godebug.(*runtimeStderr).Write
internal/godebug.New
internal/godebug.init.0
internal/godebug.lookup
internal/godebug.newIncNonDefault
internal/godebug.parse
internal/godebug.registerMetric
internal/godebug.setNewIncNonDefault
internal/godebug.setUpdate
internal/godebug.update
internal/godebug.update.deferwrap1
internal/godebug.update.func1
internal/godebugs.Lookup
internal/itoa.Itoa
internal/itoa.Uitoa
internal/oserror.init
internal/poll.(*DeadlineExceededError).Error
internal/poll.(*FD).Close
internal/poll.(*FD).Init
internal/poll.(*FD).Read
internal/poll.(*FD).Read.deferwrap1
internal/poll.(*FD).Write
internal/poll.(*FD).Write.deferwrap1
internal/poll.(*FD).decref
internal/poll.(*FD).destroy
internal/poll.(*FD).eofError
internal/poll.(*FD).readLock
internal/poll.(*FD).readUnlock
internal/poll.(*FD).writeLock
internal/poll.(*FD).writeUnlock
internal/poll.(*SysFile).destroy
internal/poll.(*SysFile).init
internal/poll.(*errNetClosing).Error
internal/poll.(*fdMutex).decref
internal/poll.(*fdMutex).increfAndClose
internal/poll.(*fdMutex).rwlock
internal/poll.(*fdMutex).rwunlock
internal/poll.(*pollDesc).close
internal/poll.(*pollDesc).evict
internal/poll.(*pollDesc).init
internal/poll.(*pollDesc).pollable
internal/poll.(*pollDesc).prepare
internal/poll.(*pollDesc).prepareRead
internal/poll.(*pollDesc).prepareWrite
internal/poll.(*pollDesc).wait
internal/poll.(*pollDesc).waitRead
internal/poll.(*pollDesc).waitWrite
internal/poll.convertErr
internal/poll.errClosing
internal/poll.errNetClosing.Error
internal/poll.errnoErr
internal/poll.ignoringEINTRIO
internal/poll.init
internal/poll.runtime_Semacquire
internal/poll.runtime_Semrelease
internal/poll.runtime_pollClose
internal/poll.runtime_pollOpen
internal/poll.runtime_pollReset
internal/poll.runtime_pollServerInit
internal/poll.runtime_pollUnblock
internal/poll.runtime_pollWait
internal/race.Enable
internal/reflectlite.(*rtype).Comparable
internal/reflectlite.(*rtype).Elem
internal/reflectlite.(*rtype).Len
internal/reflectlite.(*rtype).String
internal/reflectlite.TypeOf
internal/reflectlite.elem
internal/reflectlite.resolveNameOff
internal/reflectlite.rtype.Comparable
internal/reflectlite.rtype.Elem
internal/reflectlite.rtype.Len
internal/reflectlite.rtype.String
internal/reflectlite.rtype.common
internal/reflectlite.rtype.nameOff
internal/reflectlite.toRType
internal/reflectlite.toType
internal/runtime/atomic.(*Bool).Load
internal/runtime/atomic.(*Bool).Store
internal/runtime/atomic.(*Float64).Load
internal/runtime/atomic.(*Float64).Store
internal/runtime/atomic.(*Int32).Add
internal/runtime/atomic.(*Int32).CompareAndSwap
internal/runtime/atomic.(*Int32).Load
internal/runtime/atomic.(*Int32).Store
internal/runtime/atomic.(*Int64).Add
internal/runtime/atomic.(*Int64).CompareAndSwap
internal/runtime/atomic.(*Int64).Load
internal/runtime/atomic.(*Int64).Store
internal/runtime/atomic.(*Int64).Swap
internal/runtime/atomic.(*Pointer[go.shape.a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7]).CompareAndSwapNoWB
internal/runtime/atomic.(*Pointer[go.shape.a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7]).Load
internal/runtime/atomic.(*Pointer[go.shape.func()]).CompareAndSwap
internal/runtime/atomic.(*Pointer[go.shape.func()]).Load
internal/runtime/atomic.(*Pointer[go.shape.func(string) func()]).Load
internal/runtime/atomic.(*Pointer[go.shape.func(string) func()]).Store
internal/runtime/atomic.(*Pointer[go.shape.func(string, string)]).Load
internal/runtime/atomic.(*Pointer[go.shape.func(string, string)]).Store
internal/runtime/atomic.(*Pointer[go.shape.string]).Load
internal/runtime/atomic.(*Pointer[go.shape.string]).Store
internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.heap bool; runtime.rangefunc bool; runtime.sp uintptr; runtime.pc uintptr; runtime.fn func(); runtime.link *runtime._defer; runtime.head *internal/runtime/atomic.Pointer[runtime._defer] }]).CompareAndSwap
internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.heap bool; runtime.rangefunc bool; runtime.sp uintptr; runtime.pc uintptr; runtime.fn func(); runtime.link *runtime._defer; runtime.head *internal/runtime/atomic.Pointer[runtime._defer] }]).Load
internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.lfnode; runtime.popped internal/runtime/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]).Load
internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.lfnode; runtime.popped internal/runtime/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]).StoreNoWB
internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.r runtime.profAtomic; runtime.w runtime.profAtomic; runtime.overflow internal/runtime/atomic.Uint64; runtime.overflowTime internal/runtime/atomic.Uint64; runtime.eof internal/runtime/atomic.Uint32; runtime.hdrsize uintptr; runtime.data []uint64; runtime.tags []unsafe.Pointer; runtime.rNext runtime.profIndex; runtime.overflowBuf []uint64; runtime.wait runtime.note }]).Load
internal/runtime/atomic.(*Pointer[go.shape.struct { runtime.r runtime.profAtomic; runtime.w runtime.profAtomic; runtime.overflow internal/runtime/atomic.Uint64; runtime.overflowTime internal/runtime/atomic.Uint64; runtime.eof internal/runtime/atomic.Uint32; runtime.hdrsize uintptr; runtime.data []uint64; runtime.tags []unsafe.Pointer; runtime.rNext runtime.profIndex; runtime.overflowBuf []uint64; runtime.wait runtime.note }]).Store
internal/runtime/atomic.(*Uint32).Add
internal/runtime/atomic.(*Uint32).And
internal/runtime/atomic.(*Uint32).CompareAndSwap
internal/runtime/atomic.(*Uint32).Load
internal/runtime/atomic.(*Uint32).Or
internal/runtime/atomic.(*Uint32).Store
internal/runtime/atomic.(*Uint32).Swap
internal/runtime/atomic.(*Uint64).Add
internal/runtime/atomic.(*Uint64).CompareAndSwap
internal/runtime/atomic.(*Uint64).Load
internal/runtime/atomic.(*Uint64).Store
internal/runtime/atomic.(*Uint8).Load
internal/runtime/atomic.(*Uint8).Store
internal/runtime/atomic.(*Uintptr).Add
internal/runtime/atomic.(*Uintptr).CompareAndSwap
internal/runtime/atomic.(*Uintptr).Load
internal/runtime/atomic.(*Uintptr).Store
internal/runtime/atomic.(*Uintptr).Swap
internal/runtime/atomic.(*UnsafePointer).CompareAndSwap
internal/runtime/atomic.(*UnsafePointer).CompareAndSwapNoWB
internal/runtime/atomic.(*UnsafePointer).Load
internal/runtime/atomic.(*UnsafePointer).Store
internal/runtime/atomic.(*UnsafePointer).StoreNoWB
internal/runtime/atomic.casPointer
internal/runtime/atomic.storePointer
internal/runtime/exithook.Run
internal/runtime/exithook.Run.deferwrap1
internal/runtime/exithook.Run.deferwrap2
internal/runtime/exithook.Run.func1
internal/stringslite.HasPrefix
internal/syscall/unix.Fcntl
internal/syscall/unix.HasNonblockFlag
internal/testlog.Getenv
internal/testlog.Logger
internal/testlog.PanicOnExit0
internal/testlog.PanicOnExit0.deferwrap1
io.(*discard).Write
io.ReadAll
io.discard.Write
io.init
io/fs.(*FileMode).String
io/fs.(*PathError).Error
io/fs.(*PathError).Unwrap
io/fs.FileMode.String
io/fs.errClosed
io/fs.errExist
io/fs.errInvalid
io/fs.errNotExist
io/fs.errPermission
io/fs.init
io/ioutil.ReadAll
io/ioutil.init
iter.init
main.consumeValues
main.consumeValues.deferwrap1
main.main
main.main.func1
main.main.gowrap1
main.main.gowrap2
main.main.gowrap3
main.produceValues
main.produceValues.deferwrap1
math.Float32bits
math.Float64bits
math.init
math/bits.TrailingZeros
math/rand.(*Rand).Int
math/rand.(*Rand).Int63
math/rand.(*Rand).Read
math/rand.(*Rand).Seed
math/rand.(*lockedSource).Int63
math/rand.(*lockedSource).Seed
math/rand.(*lockedSource).read
math/rand.(*lockedSource).seed
math/rand.(*lockedSource).seedPos
math/rand.(*rngSource).Int63
math/rand.(*rngSource).Seed
math/rand.(*rngSource).Uint64
math/rand.(*runtimeSource).Int63
math/rand.(*runtimeSource).Seed
math/rand.(*runtimeSource).read
math/rand.Int
math/rand.New
math/rand.Read
math/rand.globalRand
math/rand.init
math/rand.newSource
math/rand.read
math/rand.seedrand
memeqbody
os.(*File).Read
os.(*File).Write
os.(*File).checkValid
os.(*File).read
os.(*File).wrapErr
os.(*File).write
os.(*SyscallError).Error
os.(*SyscallError).Unwrap
os.(*dirInfo).close
os.(*file).close
os.Exit
os.Getenv
os.Getwd
os.NewFile
os.NewSyscallError
os.SameFile
os.epipecheck
os.errDeadlineExceeded
os.errNoDeadline
os.fillFileStatFromSys
os.ignoringEINTR
os.init
os.init.0
os.newFile
os.newFile.func1
os.runtime_args
os.runtime_beforeExit
os.sameFile
os.sigpipe
os.statNolog
os.statNolog.func1
os/signal.(*handler).set
os/signal.(*handler).want
os/signal.Notify
os/signal.Notify.deferwrap1
os/signal.Notify.func1
os/signal.Notify.func1.1
os/signal.enableSignal
os/signal.init.0
os/signal.loop
os/signal.process
os/signal.process.deferwrap1
os/signal.signal_enable
os/signal.signal_ignored
os/signal.signal_recv
os/signal.signum
path.init
reflect.(*ChanDir).String
reflect.(*Kind).String
reflect.(*MapIter).Key
reflect.(*MapIter).Next
reflect.(*MapIter).Value
reflect.(*Value).Comparable
reflect.(*Value).Kind
reflect.(*Value).Len
reflect.(*Value).String
reflect.(*ValueError).Error
reflect.(*abiSeq).addArg
reflect.(*abiSeq).addRcvr
reflect.(*abiSeq).assignFloatN
reflect.(*abiSeq).assignIntN
reflect.(*abiSeq).regAssign
reflect.(*abiSeq).stackAssign
reflect.(*abiSeq).stepsForValue
reflect.(*bitVector).append
reflect.(*hiter).initialized
reflect.(*interfaceType).NumMethod
reflect.(*interfaceType).nameOff
reflect.(*interfaceType).typeOff
reflect.(*rtype).Comparable
reflect.(*rtype).Elem
reflect.(*rtype).Field
reflect.(*rtype).Kind
reflect.(*rtype).Len
reflect.(*rtype).NumMethod
reflect.(*rtype).String
reflect.(*rtype).common
reflect.(*rtype).exportedMethods
reflect.(*rtype).nameOff
reflect.(*rtype).textOff
reflect.(*rtype).typeOff
reflect.(*rtype).uncommon
reflect.(*structType).Field
reflect.ChanDir.String
reflect.Kind.String
reflect.TypeOf
reflect.Value.Bool
reflect.Value.Bytes
reflect.Value.CanAddr
reflect.Value.CanInterface
reflect.Value.Comparable
reflect.Value.Complex
reflect.Value.Elem
reflect.Value.Field
reflect.Value.Float
reflect.Value.Index
reflect.Value.Int
reflect.Value.Interface
reflect.Value.IsNil
reflect.Value.IsValid
reflect.Value.Kind
reflect.Value.Len
reflect.Value.MapRange
reflect.Value.NumField
reflect.Value.NumMethod
reflect.Value.Pointer
reflect.Value.String
reflect.Value.Type
reflect.Value.Uint
reflect.Value.UnsafePointer
reflect.Value.bytesSlow
reflect.Value.lenNonSlice
reflect.Value.panicNotBool
reflect.Value.pointer
reflect.Value.stringNonString
reflect.Value.typ
reflect.Value.typeSlow
reflect.ValueOf
reflect.add
reflect.addReflectOff
reflect.addTypeBits
reflect.align
reflect.archFloat32FromReg
reflect.archFloat32ToReg
reflect.arrayAt
reflect.callMethod
reflect.chanlen
reflect.copyVal
reflect.elem
reflect.escapes
reflect.flag.kind
reflect.flag.mustBe
reflect.flag.panicNotMap
reflect.flag.ro
reflect.floatFromReg
reflect.floatToReg
reflect.funcLayout
reflect.funcLayout.func1
reflect.init
reflect.intFromReg
reflect.intToReg
reflect.makeMethodValue
reflect.mapiterelem
reflect.mapiterinit
reflect.mapiterkey
reflect.mapiternext
reflect.maplen
reflect.memmove
reflect.methodReceiver
reflect.methodValueCall
reflect.methodValueCallCodePtr
reflect.moveMakeFuncArgPtrs
reflect.nameOffFor
reflect.newAbiDesc
reflect.newName
reflect.noescape
reflect.packEface
reflect.resolveNameOff
reflect.resolveReflectName
reflect.resolveTextOff
reflect.resolveTypeOff
reflect.rtypeOf
reflect.storeRcvr
reflect.stringFor
reflect.textOffFor
reflect.toRType
reflect.toType
reflect.typeOffFor
reflect.typedmemclr
reflect.typedmemmove
reflect.unpackEface
reflect.unsafe_New
reflect.valueInterface
reflect.valueMethodName
reflect.verifyNotInHeapPtr
runtime.(*Frames).Next
runtime.(*Func).Entry
runtime.(*Func).raw
runtime.(*PanicNilError).Error
runtime.(*Pinner).Pin
runtime.(*Pinner).Pin.func1
runtime.(*Pinner).Unpin
runtime.(*TypeAssertionError).Error
runtime.(*_func).funcInfo
runtime.(*_func).isInlined
runtime.(*_panic).initOpenCodedDefers
runtime.(*_panic).nextDefer
runtime.(*_panic).nextFrame
runtime.(*_panic).nextFrame.func1
runtime.(*_panic).start
runtime.(*activeSweep).begin
runtime.(*activeSweep).end
runtime.(*activeSweep).isDone
runtime.(*activeSweep).markDrained
runtime.(*activeSweep).reset
runtime.(*activeSweep).sweepers
runtime.(*addrRanges).add
runtime.(*addrRanges).cloneInto
runtime.(*addrRanges).findAddrGreaterEqual
runtime.(*addrRanges).findSucc
runtime.(*addrRanges).init
runtime.(*atomicHeadTailIndex).cas
runtime.(*atomicHeadTailIndex).incTail
runtime.(*atomicHeadTailIndex).load
runtime.(*atomicHeadTailIndex).reset
runtime.(*atomicMSpanPointer).Load
runtime.(*atomicMSpanPointer).StoreNoWB
runtime.(*atomicOffAddr).Clear
runtime.(*atomicOffAddr).Load
runtime.(*atomicOffAddr).StoreMarked
runtime.(*atomicOffAddr).StoreMin
runtime.(*atomicOffAddr).StoreUnmark
runtime.(*atomicScavChunkData).load
runtime.(*atomicScavChunkData).store
runtime.(*atomicSpanSetSpinePointer).Load
runtime.(*atomicSpanSetSpinePointer).StoreNoWB
runtime.(*bmap).keys
runtime.(*bmap).overflow
runtime.(*bmap).setoverflow
runtime.(*boundsError).Error
runtime.(*bucket).bp
runtime.(*bucket).mp
runtime.(*bucket).stk
runtime.(*consistentHeapStats).acquire
runtime.(*consistentHeapStats).release
runtime.(*cpuProfile).add
runtime.(*cpuProfile).addExtra
runtime.(*cpuProfile).addNonGo
runtime.(*cpuStats).accumulate
runtime.(*cpuStats).accumulateGCPauseTime
runtime.(*errorAddressString).Error
runtime.(*errorString).Error
runtime.(*fixalloc).alloc
runtime.(*fixalloc).free
runtime.(*fixalloc).init
runtime.(*g).guintptr
runtime.(*gList).empty
runtime.(*gList).pop
runtime.(*gList).push
runtime.(*gList).pushAll
runtime.(*gQueue).empty
runtime.(*gQueue).pop
runtime.(*gQueue).popList
runtime.(*gQueue).push
runtime.(*gQueue).pushBack
runtime.(*gQueue).pushBackAll
runtime.(*gTraceState).reset
runtime.(*gcBits).bitp
runtime.(*gcBits).bytep
runtime.(*gcBitsArena).tryAlloc
runtime.(*gcCPULimiterState).accumulate
runtime.(*gcCPULimiterState).addAssistTime
runtime.(*gcCPULimiterState).addIdleTime
runtime.(*gcCPULimiterState).finishGCTransition
runtime.(*gcCPULimiterState).limiting
runtime.(*gcCPULimiterState).needUpdate
runtime.(*gcCPULimiterState).resetCapacity
runtime.(*gcCPULimiterState).startGCTransition
runtime.(*gcCPULimiterState).tryLock
runtime.(*gcCPULimiterState).unlock
runtime.(*gcCPULimiterState).update
runtime.(*gcCPULimiterState).updateLocked
runtime.(*gcControllerState).addGlobals
runtime.(*gcControllerState).addIdleMarkWorker
runtime.(*gcControllerState).addScannableStack
runtime.(*gcControllerState).commit
runtime.(*gcControllerState).endCycle
runtime.(*gcControllerState).enlistWorker
runtime.(*gcControllerState).findRunnableGCWorker
runtime.(*gcControllerState).findRunnableGCWorker.func1
runtime.(*gcControllerState).heapGoal
runtime.(*gcControllerState).heapGoalInternal
runtime.(*gcControllerState).init
runtime.(*gcControllerState).markWorkerStop
runtime.(*gcControllerState).memoryLimitHeapGoal
runtime.(*gcControllerState).needIdleMarkWorker
runtime.(*gcControllerState).removeIdleMarkWorker
runtime.(*gcControllerState).resetLive
runtime.(*gcControllerState).revise
runtime.(*gcControllerState).setGCPercent
runtime.(*gcControllerState).setMaxIdleMarkWorkers
runtime.(*gcControllerState).setMemoryLimit
runtime.(*gcControllerState).startCycle
runtime.(*gcControllerState).trigger
runtime.(*gcControllerState).update
runtime.(*gcWork).balance
runtime.(*gcWork).dispose
runtime.(*gcWork).empty
runtime.(*gcWork).init
runtime.(*gcWork).put
runtime.(*gcWork).putBatch
runtime.(*gcWork).putFast
runtime.(*gcWork).tryGet
runtime.(*gcWork).tryGetFast
runtime.(*godebugInc).IncNonDefault
runtime.(*goroutineProfileStateHolder).CompareAndSwap
runtime.(*goroutineProfileStateHolder).Load
runtime.(*goroutineProfileStateHolder).Store
runtime.(*guintptr).cas
runtime.(*guintptr).set
runtime.(*hchan).raceaddr
runtime.(*hchan).sortkey
runtime.(*hmap).createOverflow
runtime.(*hmap).growing
runtime.(*hmap).incrnoverflow
runtime.(*hmap).newoverflow
runtime.(*hmap).noldbuckets
runtime.(*hmap).oldbucketmask
runtime.(*hmap).sameSizeGrow
runtime.(*inlineUnwinder).fileLine
runtime.(*inlineUnwinder).isInlined
runtime.(*inlineUnwinder).next
runtime.(*inlineUnwinder).resolveInternal
runtime.(*inlineUnwinder).srcFunc
runtime.(*itabTableType).add
runtime.(*itabTableType).add-fm
runtime.(*itabTableType).find
runtime.(*lfstack).empty
runtime.(*lfstack).pop
runtime.(*lfstack).push
runtime.(*limiterEvent).consume
runtime.(*limiterEvent).start
runtime.(*limiterEvent).stop
runtime.(*linearAlloc).alloc
runtime.(*lockRank).String
runtime.(*lockTimer).begin
runtime.(*lockTimer).end
runtime.(*m).becomeSpinning
runtime.(*m).hasCgoOnStack
runtime.(*mLockProfile).captureStack
runtime.(*mLockProfile).captureStack.func1
runtime.(*mLockProfile).recordLock
runtime.(*mLockProfile).recordUnlock
runtime.(*mLockProfile).store
runtime.(*mProfCycleHolder).increment
runtime.(*mProfCycleHolder).read
runtime.(*mProfCycleHolder).setFlushed
runtime.(*mSpanList).init
runtime.(*mSpanList).insert
runtime.(*mSpanList).isEmpty
runtime.(*mSpanList).remove
runtime.(*mSpanList).takeAll
runtime.(*mSpanStateBox).get
runtime.(*mSpanStateBox).set
runtime.(*markBits).advance
runtime.(*mcache).allocLarge
runtime.(*mcache).nextFree
runtime.(*mcache).prepareForSweep
runtime.(*mcache).refill
runtime.(*mcache).releaseAll
runtime.(*mcentral).cacheSpan
runtime.(*mcentral).fullSwept
runtime.(*mcentral).fullUnswept
runtime.(*mcentral).grow
runtime.(*mcentral).init
runtime.(*mcentral).partialSwept
runtime.(*mcentral).partialUnswept
runtime.(*mcentral).uncacheSpan
runtime.(*memRecordCycle).add
runtime.(*metricValue).float64HistOrInit
runtime.(*mheap).alloc
runtime.(*mheap).alloc.func1
runtime.(*mheap).allocMSpanLocked
runtime.(*mheap).allocManual
runtime.(*mheap).allocNeedsZero
runtime.(*mheap).allocSpan
runtime.(*mheap).allocSpan.func1
runtime.(*mheap).enableMetadataHugePages
runtime.(*mheap).freeMSpanLocked
runtime.(*mheap).freeManual
runtime.(*mheap).freeSpan
runtime.(*mheap).freeSpan.func1
runtime.(*mheap).freeSpanLocked
runtime.(*mheap).grow
runtime.(*mheap).init
runtime.(*mheap).initSpan
runtime.(*mheap).nextSpanForSweep
runtime.(*mheap).reclaim
runtime.(*mheap).reclaimChunk
runtime.(*mheap).setSpans
runtime.(*mheap).sysAlloc
runtime.(*mheap).tryAllocMSpan
runtime.(*moduledata).funcName
runtime.(*moduledata).textAddr
runtime.(*moduledata).textOff
runtime.(*mspan).allocBitsForIndex
runtime.(*mspan).base
runtime.(*mspan).countAlloc
runtime.(*mspan).decPinCounter
runtime.(*mspan).divideByElemSize
runtime.(*mspan).ensureSwept
runtime.(*mspan).getPinnerBits
runtime.(*mspan).heapBits
runtime.(*mspan).heapBitsSmallForAddr
runtime.(*mspan).incPinCounter
runtime.(*mspan).init
runtime.(*mspan).initHeapBits
runtime.(*mspan).isFree
runtime.(*mspan).markBitsForBase
runtime.(*mspan).markBitsForIndex
runtime.(*mspan).newPinnerBits
runtime.(*mspan).nextFreeIndex
runtime.(*mspan).objBase
runtime.(*mspan).objIndex
runtime.(*mspan).pinnerBitSize
runtime.(*mspan).refillAllocCache
runtime.(*mspan).refreshPinnerBits
runtime.(*mspan).reportZombies
runtime.(*mspan).setPinnerBits
runtime.(*mspan).setUserArenaChunkToFault
runtime.(*mspan).setUserArenaChunkToFault.func1
runtime.(*mspan).specialFindSplicePoint
runtime.(*mspan).typePointersOf
runtime.(*mspan).typePointersOfType
runtime.(*mspan).typePointersOfUnchecked
runtime.(*mspan).writeHeapBitsSmall
runtime.(*muintptr).set
runtime.(*notInHeap).add
runtime.(*p).destroy
runtime.(*p).destroy.func1
runtime.(*p).init
runtime.(*pageAlloc).alloc
runtime.(*pageAlloc).allocRange
runtime.(*pageAlloc).allocToCache
runtime.(*pageAlloc).chunkOf
runtime.(*pageAlloc).enableChunkHugePages
runtime.(*pageAlloc).find
runtime.(*pageAlloc).find.func1
runtime.(*pageAlloc).findMappedAddr
runtime.(*pageAlloc).free
runtime.(*pageAlloc).grow
runtime.(*pageAlloc).init
runtime.(*pageAlloc).scavenge
runtime.(*pageAlloc).scavenge.func1
runtime.(*pageAlloc).scavengeOne
runtime.(*pageAlloc).sysGrow
runtime.(*pageAlloc).sysGrow.func1
runtime.(*pageAlloc).sysGrow.func2
runtime.(*pageAlloc).sysGrow.func3
runtime.(*pageAlloc).sysInit
runtime.(*pageAlloc).update
runtime.(*pageBits).block64
runtime.(*pageBits).clear
runtime.(*pageBits).clearAll
runtime.(*pageBits).clearBlock64
runtime.(*pageBits).clearRange
runtime.(*pageBits).popcntRange
runtime.(*pageBits).set
runtime.(*pageBits).setAll
runtime.(*pageBits).setBlock64
runtime.(*pageBits).setRange
runtime.(*pageCache).alloc
runtime.(*pageCache).allocN
runtime.(*pageCache).empty
runtime.(*pageCache).flush
runtime.(*pallocBits).allocAll
runtime.(*pallocBits).allocPages64
runtime.(*pallocBits).allocRange
runtime.(*pallocBits).find
runtime.(*pallocBits).find1
runtime.(*pallocBits).findLargeN
runtime.(*pallocBits).findSmallN
runtime.(*pallocBits).free
runtime.(*pallocBits).free1
runtime.(*pallocBits).freeAll
runtime.(*pallocBits).pages64
runtime.(*pallocBits).summarize
runtime.(*pallocData).allocAll
runtime.(*pallocData).allocRange
runtime.(*pallocData).findScavengeCandidate
runtime.(*piController).next
runtime.(*piController).reset
runtime.(*pinState).isMultiPinned
runtime.(*pinState).isPinned
runtime.(*pinState).set
runtime.(*pinState).setMultiPinned
runtime.(*pinState).setPinned
runtime.(*pinner).unpin
runtime.(*pinnerBits).ofObject
runtime.(*plainError).Error
runtime.(*pollCache).alloc
runtime.(*pollCache).free
runtime.(*pollDesc).info
runtime.(*pollDesc).publishInfo
runtime.(*pollDesc).setEventErr
runtime.(*profAtomic).cas
runtime.(*profAtomic).load
runtime.(*profAtomic).store
runtime.(*profBuf).canWriteRecord
runtime.(*profBuf).canWriteTwoRecords
runtime.(*profBuf).close
runtime.(*profBuf).hasOverflow
runtime.(*profBuf).incrementOverflow
runtime.(*profBuf).read
runtime.(*profBuf).takeOverflow
runtime.(*profBuf).wakeupExtra
runtime.(*profBuf).write
runtime.(*puintptr).set
runtime.(*randomEnum).done
runtime.(*randomEnum).next
runtime.(*randomEnum).position
runtime.(*randomOrder).reset
runtime.(*randomOrder).start
runtime.(*rwmutex).init
runtime.(*rwmutex).rlock
runtime.(*rwmutex).rlock.func1
runtime.(*rwmutex).runlock
runtime.(*scavChunkData).alloc
runtime.(*scavChunkData).free
runtime.(*scavChunkFlags).isEmpty
runtime.(*scavChunkFlags).setEmpty
runtime.(*scavChunkFlags).setNonEmpty
runtime.(*scavengeIndex).alloc
runtime.(*scavengeIndex).find
runtime.(*scavengeIndex).free
runtime.(*scavengeIndex).grow
runtime.(*scavengeIndex).init
runtime.(*scavengeIndex).nextGen
runtime.(*scavengeIndex).setEmpty
runtime.(*scavengeIndex).sysGrow
runtime.(*scavengeIndex).sysInit
runtime.(*scavengerState).controllerFailed
runtime.(*scavengerState).init
runtime.(*scavengerState).init.func1
runtime.(*scavengerState).init.func2
runtime.(*scavengerState).init.func3
runtime.(*scavengerState).init.func4
runtime.(*scavengerState).park
runtime.(*scavengerState).ready
runtime.(*scavengerState).run
runtime.(*scavengerState).sleep
runtime.(*scavengerState).wake
runtime.(*semTable).rootFor
runtime.(*semaRoot).dequeue
runtime.(*semaRoot).queue
runtime.(*semaRoot).rotateLeft
runtime.(*semaRoot).rotateRight
runtime.(*sigctxt).cs
runtime.(*sigctxt).fault
runtime.(*sigctxt).fixsigcode
runtime.(*sigctxt).fs
runtime.(*sigctxt).gs
runtime.(*sigctxt).preparePanic
runtime.(*sigctxt).pushCall
runtime.(*sigctxt).r10
runtime.(*sigctxt).r11
runtime.(*sigctxt).r12
runtime.(*sigctxt).r13
runtime.(*sigctxt).r14
runtime.(*sigctxt).r15
runtime.(*sigctxt).r8
runtime.(*sigctxt).r9
runtime.(*sigctxt).rax
runtime.(*sigctxt).rbp
runtime.(*sigctxt).rbx
runtime.(*sigctxt).rcx
runtime.(*sigctxt).rdi
runtime.(*sigctxt).rdx
runtime.(*sigctxt).regs
runtime.(*sigctxt).rflags
runtime.(*sigctxt).rip
runtime.(*sigctxt).rsi
runtime.(*sigctxt).rsp
runtime.(*sigctxt).set_rip
runtime.(*sigctxt).set_rsp
runtime.(*sigctxt).set_sigaddr
runtime.(*sigctxt).set_sigcode
runtime.(*sigctxt).sigFromUser
runtime.(*sigctxt).sigaddr
runtime.(*sigctxt).sigcode
runtime.(*sigctxt).siglr
runtime.(*sigctxt).sigpc
runtime.(*sigctxt).sigsp
runtime.(*spanSet).pop
runtime.(*spanSet).push
runtime.(*spanSet).reset
runtime.(*spanSetBlockAlloc).alloc
runtime.(*spanSetBlockAlloc).free
runtime.(*specialsIter).next
runtime.(*specialsIter).unlinkAndNext
runtime.(*specialsIter).valid
runtime.(*stackObject).setRecord
runtime.(*stackObjectRecord).gcdata
runtime.(*stackObjectRecord).ptrdata
runtime.(*stackObjectRecord).useGCProg
runtime.(*stackScanState).addObject
runtime.(*stackScanState).buildIndex
runtime.(*stackScanState).findObject
runtime.(*stackScanState).getPtr
runtime.(*stackScanState).putPtr
runtime.(*stkframe).argBytes
runtime.(*stkframe).argMapInternal
runtime.(*stkframe).getStackMap
runtime.(*sweepClass).clear
runtime.(*sweepClass).load
runtime.(*sweepClass).update
runtime.(*sweepLocked).sweep
runtime.(*sweepLocked).sweep.func1
runtime.(*sweepLocked).sweep.func2
runtime.(*sweepLocker).tryAcquire
runtime.(*sysMemStat).add
runtime.(*sysMemStat).load
runtime.(*ticksType).init
runtime.(*timeHistogram).record
runtime.(*timeHistogram).write
runtime.(*timer).hchan
runtime.(*timer).init
runtime.(*timer).lock
runtime.(*timer).maybeAdd
runtime.(*timer).maybeRunAsync
runtime.(*timer).maybeRunAsync.func1
runtime.(*timer).maybeRunChan
runtime.(*timer).maybeRunChan.func1
runtime.(*timer).modify
runtime.(*timer).needsAdd
runtime.(*timer).reset
runtime.(*timer).stop
runtime.(*timer).trace
runtime.(*timer).unlock
runtime.(*timer).unlockAndRun
runtime.(*timer).unlockAndRun.func1
runtime.(*timer).updateHeap
runtime.(*timers).addHeap
runtime.(*timers).adjust
runtime.(*timers).check
runtime.(*timers).cleanHead
runtime.(*timers).deleteMin
runtime.(*timers).initHeap
runtime.(*timers).lock
runtime.(*timers).run
runtime.(*timers).siftDown
runtime.(*timers).siftUp
runtime.(*timers).take
runtime.(*timers).trace
runtime.(*timers).unlock
runtime.(*timers).updateMinWhenHeap
runtime.(*timers).updateMinWhenModified
runtime.(*timers).wakeTime
runtime.(*timespec).setNsec
runtime.(*traceAdvancerState).stop
runtime.(*traceBuf).available
runtime.(*traceBuf).byte
runtime.(*traceBuf).stringData
runtime.(*traceBuf).varint
runtime.(*traceBuf).varintAt
runtime.(*traceBuf).varintReserve
runtime.(*traceBufQueue).empty
runtime.(*traceBufQueue).push
runtime.(*traceMap).newTraceMapNode
runtime.(*traceMap).put
runtime.(*traceMap).reset
runtime.(*traceRegionAlloc).alloc
runtime.(*traceRegionAlloc).drop
runtime.(*traceSchedResourceState).acquireStatus
runtime.(*traceSchedResourceState).nextSeq
runtime.(*traceSchedResourceState).readyNextGen
runtime.(*traceSchedResourceState).setStatusTraced
runtime.(*traceSchedResourceState).statusWasTraced
runtime.(*traceStackTable).dump
runtime.(*traceStackTable).put
runtime.(*traceStringTable).put
runtime.(*traceStringTable).put.func1
runtime.(*traceStringTable).reset
runtime.(*traceStringTable).reset.func1
runtime.(*traceStringTable).writeString
runtime.(*traceTypeTable).dump
runtime.(*traceTypeTable).put
runtime.(*unwinder).cgoCallers
runtime.(*unwinder).finishInternal
runtime.(*unwinder).init
runtime.(*unwinder).initAt
runtime.(*unwinder).next
runtime.(*unwinder).resolveInternal
runtime.(*unwinder).symPC
runtime.(*unwinder).valid
runtime.(*waitReason).String
runtime.(*waitq).dequeue
runtime.(*waitq).dequeueSudoG
runtime.(*waitq).enqueue
runtime.(*wakeableSleep).close
runtime.(*wakeableSleep).wake
runtime.(*wbBuf).discard
runtime.(*wbBuf).get1
runtime.(*wbBuf).get2
runtime.(*wbBuf).reset
runtime.(*workbuf).checkempty
runtime.(*workbuf).checknonempty
runtime.Callers
runtime.CallersFrames
runtime.GOMAXPROCS
runtime.GOROOT
runtime.Gosched
runtime.LockOSThread
runtime.NumCgoCall
runtime.SetFinalizer
runtime.SetFinalizer.func1
runtime.SetFinalizer.func2
runtime.UnlockOSThread
runtime._ExternalCode
runtime._GC
runtime._LostContendedRuntimeLock
runtime._LostExternalCode
runtime._LostSIGPROFDuringAtomic64
runtime._System
runtime._VDSO
runtime.abort
runtime.acquireLockRankAndM
runtime.acquireSudog
runtime.acquirem
runtime.acquirep
runtime.activeModules
runtime.add
runtime.add1
runtime.addExtraM
runtime.addWakeupEvent
runtime.addb
runtime.addfinalizer
runtime.addrRange.contains
runtime.addrRange.size
runtime.addrRange.subtract
runtime.addrsToSummaryRange
runtime.addspecial
runtime.adjustSignalStack
runtime.adjustctxt
runtime.adjustdefers
runtime.adjustframe
runtime.adjustpanics
runtime.adjustpointer
runtime.adjustpointers
runtime.adjustsudogs
runtime.advanceEvacuationMark
runtime.alginit
runtime.alignDown
runtime.alignUp
runtime.allGsSnapshot
runtime.allgadd
runtime.allocm
runtime.allocm.func1
runtime.allocmcache
runtime.allocmcache.func1
runtime.appendIntStr
runtime.arenaIdx.l1
runtime.arenaIdx.l2
runtime.arenaIndex
runtime.args
runtime.argv_index
runtime.asmcgocall
runtime.asmcgocall_landingpad
runtime.asmcgocall_no_g
runtime.asminit
runtime.assertE2I
runtime.assertE2I2
runtime.assertLockHeld
runtime.assertWorldStopped
runtime.assertWorldStoppedOrLockHeld
runtime.asyncPreempt
runtime.asyncPreempt2
runtime.atoi
runtime.atoi32
runtime.atoi64
runtime.atomicAllG
runtime.atomicAllGIndex
runtime.atomicstorep
runtime.atomicwb
runtime.badDefer
runtime.badPointer
runtime.badTimer
runtime.badctxt
runtime.badmcall
runtime.badmcall2
runtime.badmorestackg0
runtime.badmorestackg0.func1
runtime.badmorestackgsignal
runtime.badreflectcall
runtime.badsignal
runtime.badsystemstack
runtime.badunlockosthread
runtime.beforeIdle
runtime.bgscavenge
runtime.bgsweep
runtime.binarySearchTree
runtime.blockAlignSummaryRange
runtime.blockTimerChan
runtime.blockableSig
runtime.blockevent
runtime.blocksampled
runtime.bool2int
runtime.bootstrapRand
runtime.bootstrapRandReseed
runtime.boundsError.Error
runtime.bucketEvacuated
runtime.bucketMask
runtime.bucketShift
runtime.buildInterfaceSwitchCache
runtime.buildInterfaceSwitchCache.func1
runtime.buildTypeAssertCache
runtime.buildTypeAssertCache.func1
runtime.bulkBarrierBitmap
runtime.bulkBarrierPreWrite
runtime.bulkBarrierPreWriteSrcOnly
runtime.bytes
runtime.c128equal
runtime.c128hash
runtime.c64equal
runtime.c64hash
runtime.call1024
runtime.call1048576
runtime.call1073741824
runtime.call128
runtime.call131072
runtime.call134217728
runtime.call16
runtime.call16384
runtime.call16777216
runtime.call2048
runtime.call2097152
runtime.call256
runtime.call262144
runtime.call268435456
runtime.call32
runtime.call32768
runtime.call33554432
runtime.call4096
runtime.call4194304
runtime.call512
runtime.call524288
runtime.call536870912
runtime.call64
runtime.call65536
runtime.call67108864
runtime.call8192
runtime.call8388608
runtime.callCgoSymbolizer
runtime.callbackUpdateSystemStack
runtime.callers
runtime.callers.func1
runtime.canPreemptM
runtime.canpanic
runtime.cansemacquire
runtime.casGFromPreempted
runtime.casGToPreemptScan
runtime.casGToWaiting
runtime.casGToWaitingForGC
runtime.casfrom_Gscanstatus
runtime.casgstatus
runtime.casgstatus.func1
runtime.casgstatus.func2
runtime.castogscanstatus
runtime.cgoContextPCs
runtime.cgoSigtramp
runtime.cgocall
runtime.chanbuf
runtime.chanlen
runtime.chanparkcommit
runtime.chanrecv
runtime.chanrecv.func1
runtime.chanrecv1
runtime.chansend
runtime.chansend.func1
runtime.chansend1
runtime.cheaprand
runtime.cheaprand64
runtime.cheaprandn
runtime.check
runtime.checkASM
runtime.checkIdleGCNoP
runtime.checkRunqsNoP
runtime.checkTimeouts
runtime.checkTimersNoP
runtime.checkdead
runtime.checkdead.func1
runtime.checkfds
runtime.checkmcount
runtime.chunkBase
runtime.chunkIdx.l1
runtime.chunkIdx.l2
runtime.chunkIndex
runtime.chunkPageIndex
runtime.clearpools
runtime.clobberfree
runtime.close_trampoline
runtime.closechan
runtime.closefd
runtime.closeonexec
runtime.cmpstring
runtime.compute0
runtime.concatstring2
runtime.concatstring3
runtime.concatstring4
runtime.concatstring5
runtime.concatstrings
runtime.convT
runtime.convT64
runtime.convTnoptr
runtime.convTslice
runtime.convTstring
runtime.copystack
runtime.countSub
runtime.cpuinit
runtime.cputicks
runtime.crash
runtime.createfing
runtime.debugCallCheck
runtime.debugCallCheck.func1
runtime.debugCallPanicked
runtime.debugCallV2
runtime.debugCallWrap
runtime.debugCallWrap.func1
runtime.debugCallWrap.func2
runtime.debugCallWrap1
runtime.debugCallWrap1.func1
runtime.debugCallWrap2
runtime.debugCallWrap2.func1
runtime.debugPinnerV1
runtime.decoderune
runtime.deductAssistCredit
runtime.deductSweepCredit
runtime.deferconvert
runtime.deferprocStack
runtime.deferreturn
runtime.dematerializeGCProg
runtime.dieFromSignal
runtime.divRoundUp
runtime.doInit
runtime.doInit1
runtime.doRecordGoroutineProfile
runtime.doRecordGoroutineProfile.func1
runtime.doSigPreempt
runtime.dolockOSThread
runtime.dopanic_m
runtime.dounlockOSThread
runtime.drainWakeupEvent
runtime.dropg
runtime.dropm
runtime.duffcopy
runtime.duffzero
runtime.dumpStacksRec
runtime.dumpTypesRec
runtime.dumpgstatus
runtime.dumpregs
runtime.efaceOf
runtime.efaceeq
runtime.elideWrapperCalling
runtime.emitUnblockStatus
runtime.empty
runtime.encoderune
runtime.endCheckmarks
runtime.ensureSigM
runtime.ensureSigM.func1
runtime.entersyscall
runtime.entersyscall_gcwait
runtime.entersyscall_sysmon
runtime.entersyscallblock
runtime.entersyscallblock.func1
runtime.entersyscallblock.func2
runtime.entersyscallblock_handoff
runtime.envKeyEqual
runtime.environ
runtime.eqslice
runtime.errorAddressString.Error
runtime.errorString.Error
runtime.evacuate
runtime.evacuate_fast32
runtime.evacuate_fast64
runtime.evacuate_faststr
runtime.evacuated
runtime.execute
runtime.exit
runtime.exitThread
runtime.exit_trampoline
runtime.exitsyscall
runtime.exitsyscall.func1
runtime.exitsyscall.func2
runtime.exitsyscall0
runtime.exitsyscallfast
runtime.exitsyscallfast.func1
runtime.exitsyscallfast_pidle
runtime.exitsyscallfast_reacquired
runtime.exitsyscallfast_reacquired.func1
runtime.expandCgoFrames
runtime.f32equal
runtime.f32hash
runtime.f64equal
runtime.f64hash
runtime.fastexprand
runtime.fastlog2
runtime.fatal
runtime.fatal.func1
runtime.fatalpanic
runtime.fatalpanic.func1
runtime.fatalpanic.func2
runtime.fatalsignal
runtime.fatalthrow
runtime.fatalthrow.func1
runtime.fcntl
runtime.fcntl_trampoline
runtime.fillAligned
runtime.fillAligned.func1
runtime.fillstack
runtime.finalizercommit
runtime.findBitRange64
runtime.findObject
runtime.findRunnable
runtime.findfunc
runtime.findmoduledatap
runtime.findnull
runtime.findsghi
runtime.finishsweep_m
runtime.float64Inf
runtime.float64NegInf
runtime.float64bits
runtime.float64frombits
runtime.fmtNSAsMS
runtime.forEachG
runtime.forEachGRace
runtime.forEachP
runtime.forEachP.func1
runtime.forEachPInternal
runtime.forcegchelper
runtime.fpTracebackPCs
runtime.fpTracebackPartialExpand
runtime.fpTracebackPartialExpand.func1
runtime.fpunwindExpand
runtime.fpunwindExpand.func1
runtime.freeSomeWbufs
runtime.freeSomeWbufs.func1
runtime.freeSpecial
runtime.freeStackSpans
runtime.freemcache
runtime.freemcache.func1
runtime.freezetheworld
runtime.full
runtime.funcInfo._Func
runtime.funcInfo.entry
runtime.funcInfo.srcFunc
runtime.funcInfo.valid
runtime.funcMaxSPDelta
runtime.funcNameForPrint
runtime.funcNamePiecesForPrint
runtime.funcdata
runtime.funcfile
runtime.funcline
runtime.funcline1
runtime.funcname
runtime.funcpkgpath
runtime.funcspdelta
runtime.gcAssistAlloc
runtime.gcAssistAlloc.func1
runtime.gcAssistAlloc1
runtime.gcBgMarkPrepare
runtime.gcBgMarkStartWorkers
runtime.gcBgMarkStartWorkers.gowrap1
runtime.gcBgMarkWorker
runtime.gcBgMarkWorker.func1
runtime.gcBgMarkWorker.func2
runtime.gcComputeStartingStackSize
runtime.gcControllerCommit
runtime.gcDrain
runtime.gcDrainMarkWorkerDedicated
runtime.gcDrainMarkWorkerFractional
runtime.gcDrainMarkWorkerIdle
runtime.gcDrainN
runtime.gcDumpObject
runtime.gcFlushBgCredit
runtime.gcMark
runtime.gcMarkDone
runtime.gcMarkDone.func1
runtime.gcMarkDone.func2
runtime.gcMarkDone.func3
runtime.gcMarkDone.func4
runtime.gcMarkRootCheck
runtime.gcMarkRootCheck.func1
runtime.gcMarkRootPrepare
runtime.gcMarkRootPrepare.func1
runtime.gcMarkTermination
runtime.gcMarkTermination.func1
runtime.gcMarkTermination.func2
runtime.gcMarkTermination.func3
runtime.gcMarkTermination.func4
runtime.gcMarkTermination.func4.1
runtime.gcMarkTermination.func5
runtime.gcMarkTinyAllocs
runtime.gcMarkWorkAvailable
runtime.gcPaceScavenger
runtime.gcPaceSweeper
runtime.gcParkAssist
runtime.gcResetMarkState
runtime.gcResetMarkState.func1
runtime.gcStart
runtime.gcStart.func1
runtime.gcStart.func2
runtime.gcStart.func3
runtime.gcSweep
runtime.gcTrigger.test
runtime.gcWakeAllAssists
runtime.gcWriteBarrier1
runtime.gcWriteBarrier2
runtime.gcWriteBarrier3
runtime.gcWriteBarrier4
runtime.gcWriteBarrier5
runtime.gcWriteBarrier6
runtime.gcWriteBarrier7
runtime.gcWriteBarrier8
runtime.gcallers
runtime.gcd
runtime.gcenable
runtime.gcenable.gowrap1
runtime.gcenable.gowrap2
runtime.gcinit
runtime.gclinkptr.ptr
runtime.gcmarknewobject
runtime.gcount
runtime.gcstopm
runtime.gdestroy
runtime.getExtraM
runtime.getGodebugEarly
runtime.getLockRank
runtime.getMCache
runtime.getPageSize
runtime.getcallerfp
runtime.getempty
runtime.getempty.func1
runtime.getfp
runtime.getitab
runtime.getncpu
runtime.getsig
runtime.gfget
runtime.gfget.func1
runtime.gfget.func2
runtime.gfpurge
runtime.gfput
runtime.globrunqget
runtime.globrunqput
runtime.globrunqputbatch
runtime.globrunqputhead
runtime.goPanicIndex
runtime.goPanicIndexU
runtime.goPanicSlice3Acap
runtime.goPanicSlice3Alen
runtime.goPanicSlice3C
runtime.goPanicSliceAcap
runtime.goPanicSliceAcapU
runtime.goPanicSliceAlen
runtime.goPanicSliceAlenU
runtime.goPanicSliceB
runtime.goPanicSliceBU
runtime.goStatusToTraceGoStatus
runtime.goargs
runtime.godebugNotify
runtime.goenvs
runtime.goenvs_unix
runtime.goexit
runtime.goexit0
runtime.goexit1
runtime.gogetenv
runtime.gogo
runtime.gopanic
runtime.gopark
runtime.goparkunlock
runtime.gopreempt_m
runtime.goready
runtime.goready.func1
runtime.gorecover
runtime.goroutineReady
runtime.goroutineheader
runtime.goschedIfBusy
runtime.goschedImpl
runtime.gosched_m
runtime.goschedguarded
runtime.goschedguarded_m
runtime.gostartcall
runtime.gostartcallfn
runtime.gostring
runtime.gostringnocopy
runtime.gotraceback
runtime.goyield
runtime.goyield_m
runtime.greyobject
runtime.growWork
runtime.growWork_fast32
runtime.growWork_fast64
runtime.growWork_faststr
runtime.growslice
runtime.guintptr.ptr
runtime.gwrite
runtime.handoff
runtime.handoffp
runtime.hashGrow
runtime.headTailIndex.head
runtime.headTailIndex.split
runtime.headTailIndex.tail
runtime.heapBitsInSpan
runtime.heapBitsSlice
runtime.heapRetained
runtime.heapSetType
runtime.heapSetType.func1
runtime.hexdumpWords
runtime.ifaceeq
runtime.inUserArenaChunk
runtime.inVDSOPage
runtime.incidlelocked
runtime.init
runtime.init.0
runtime.init.1
runtime.init.4
runtime.init.5
runtime.init.6
runtime.init.6.func1
runtime.init.7
runtime.init.func1
runtime.init.func2
runtime.initAlgAES
runtime.initMetrics
runtime.initMetrics.func1
runtime.initMetrics.func10
runtime.initMetrics.func11
runtime.initMetrics.func12
runtime.initMetrics.func13
runtime.initMetrics.func14
runtime.initMetrics.func15
runtime.initMetrics.func16
runtime.initMetrics.func17
runtime.initMetrics.func18
runtime.initMetrics.func19
runtime.initMetrics.func2
runtime.initMetrics.func20
runtime.initMetrics.func21
runtime.initMetrics.func22
runtime.initMetrics.func23
runtime.initMetrics.func24
runtime.initMetrics.func25
runtime.initMetrics.func26
runtime.initMetrics.func27
runtime.initMetrics.func28
runtime.initMetrics.func29
runtime.initMetrics.func3
runtime.initMetrics.func30
runtime.initMetrics.func31
runtime.initMetrics.func32
runtime.initMetrics.func33
runtime.initMetrics.func34
runtime.initMetrics.func35
runtime.initMetrics.func36
runtime.initMetrics.func37
runtime.initMetrics.func38
runtime.initMetrics.func39
runtime.initMetrics.func4
runtime.initMetrics.func40
runtime.initMetrics.func41
runtime.initMetrics.func42
runtime.initMetrics.func43
runtime.initMetrics.func44
runtime.initMetrics.func45
runtime.initMetrics.func46
runtime.initMetrics.func47
runtime.initMetrics.func48
runtime.initMetrics.func49
runtime.initMetrics.func5
runtime.initMetrics.func50
runtime.initMetrics.func51
runtime.initMetrics.func52
runtime.initMetrics.func53
runtime.initMetrics.func54
runtime.initMetrics.func55
runtime.initMetrics.func56
runtime.initMetrics.func6
runtime.initMetrics.func7
runtime.initMetrics.func8
runtime.initMetrics.func9
runtime.initSecureMode
runtime.initsig
runtime.injectglist
runtime.injectglist.func1
runtime.inlineFrame.valid
runtime.interequal
runtime.interfaceSwitch
runtime.interhash
runtime.intstring
runtime.isAbortPC
runtime.isAsyncSafePoint
runtime.isDirectIface
runtime.isEmpty
runtime.isExportedRuntime
runtime.isFinite
runtime.isGoPointerWithoutSpan
runtime.isInf
runtime.isNaN
runtime.isPowerOfTwo
runtime.isSecureMode
runtime.isShrinkStackSafe
runtime.isSweepDone
runtime.isSystemGoroutine
runtime.isWakeup
runtime.issetugid
runtime.issetugid_trampoline
runtime.itabAdd
runtime.itabHashFunc
runtime.itabInit
runtime.itabsinit
runtime.iterate_itabs
runtime.itoa
runtime.itoaDiv
runtime.kevent
runtime.kevent_trampoline
runtime.kqueue
runtime.kqueue_trampoline
runtime.levelIndexToOffAddr
runtime.lfnodeValidate
runtime.lfstackPack
runtime.lfstackUnpack
runtime.libcCall
runtime.limiterEventStamp.duration
runtime.limiterEventStamp.typ
runtime.lock
runtime.lock2
runtime.lockInit
runtime.lockOSThread
runtime.lockRank.String
runtime.lockRankMayQueueFinalizer
runtime.lockRankMayTraceFlush
runtime.lockWithRank
runtime.lockWithRankMayAcquire
runtime.lockextra
runtime.mPark
runtime.mProfStackInit
runtime.mProf_Flush
runtime.mProf_FlushLocked
runtime.mProf_Free
runtime.mProf_Malloc
runtime.mProf_Malloc.func1
runtime.mProf_NextCycle
runtime.mReserveID
runtime.mStackIsSystemAllocated
runtime.madvise
runtime.madvise_trampoline
runtime.main
runtime.main.func1
runtime.main.func2
runtime.makeAddrRange
runtime.makeBucketArray
runtime.makeHeadTailIndex
runtime.makeLimiterEventStamp
runtime.makeProfStack
runtime.makeProfStackFP
runtime.makeSpanClass
runtime.makeStatDepSet
runtime.makeTraceFrame
runtime.makeTraceFrames
runtime.makechan
runtime.makemap
runtime.makemap_small
runtime.makeslice
runtime.makeslicecopy
runtime.malg
runtime.malg.func1
runtime.mallocgc
runtime.mallocinit
runtime.mapKeyError
runtime.mapKeyError2
runtime.mapaccess1_fast32
runtime.mapaccess1_fast64
runtime.mapaccess1_faststr
runtime.mapaccess2
runtime.mapaccess2_fast32
runtime.mapaccess2_fast64
runtime.mapaccess2_faststr
runtime.mapaccessK
runtime.mapassign
runtime.mapassign_fast32
runtime.mapassign_fast64
runtime.mapassign_fast64ptr
runtime.mapassign_faststr
runtime.mapdelete
runtime.mapinitnoop
runtime.mapiterinit
runtime.mapiternext
runtime.markBits.isMarked
runtime.markBits.setMarked
runtime.markBits.setMarkedNonAtomic
runtime.markroot
runtime.markroot.func1
runtime.markrootBlock
runtime.markrootFreeGStacks
runtime.markrootSpans
runtime.materializeGCProg
runtime.maxSearchAddr
runtime.mcall
runtime.mcommoninit
runtime.mcount
runtime.mdestroy
runtime.memclrHasPointers
runtime.memclrNoHeapPointers
runtime.memclrNoHeapPointersChunked
runtime.memequal
runtime.memequal0
runtime.memequal128
runtime.memequal16
runtime.memequal32
runtime.memequal64
runtime.memequal8
runtime.memequal_varlen
runtime.memhash
runtime.memhash128
runtime.memhash32
runtime.memhash32Fallback
runtime.memhash64
runtime.memhash64Fallback
runtime.memhashFallback
runtime.memmove
runtime.mergeSummaries
runtime.metricReader.compute
runtime.metricReader.compute-fm
runtime.metricsLock
runtime.metricsUnlock
runtime.mexit
runtime.mget
runtime.minit
runtime.minitSignalMask
runtime.minitSignalStack
runtime.mix
runtime.mmap
runtime.mmap_trampoline
runtime.moduledataverify
runtime.moduledataverify1
runtime.modulesinit
runtime.morestack
runtime.morestack_noctxt
runtime.morestackc
runtime.mpreinit
runtime.mput
runtime.mrandinit
runtime.msigrestore
runtime.mspinning
runtime.mstart
runtime.mstart0
runtime.mstart1
runtime.mstart_stub
runtime.mstartm0
runtime.muintptr.ptr
runtime.munmap
runtime.munmap_trampoline
runtime.nanotime
runtime.nanotime1
runtime.nanotime_trampoline
runtime.needm
runtime.netpoll
runtime.netpollAdjustWaiters
runtime.netpollAnyWaiters
runtime.netpollBreak
runtime.netpollGenericInit
runtime.netpollblock
runtime.netpollblockcommit
runtime.netpollcheckerr
runtime.netpollclose
runtime.netpollgoready
runtime.netpollinit
runtime.netpollinited
runtime.netpollopen
runtime.netpollready
runtime.netpollunblock
runtime.newAllocBits
runtime.newArenaMayUnlock
runtime.newBucket
runtime.newInlineUnwinder
runtime.newMarkBits
runtime.newSpecialsIter
runtime.newarray
runtime.newextram
runtime.newm
runtime.newm1
runtime.newobject
runtime.newosproc
runtime.newosproc.func1
runtime.newproc
runtime.newproc.func1
runtime.newproc1
runtime.newstack
runtime.nextFreeFast
runtime.nextMarkBitArenaEpoch
runtime.nextSample
runtime.nextslicecap
runtime.nilfunc
runtime.nilinterequal
runtime.nilinterhash
runtime.noSignalStack
runtime.noescape
runtime.noteclear
runtime.notesleep
runtime.notetsleep
runtime.notetsleep_internal
runtime.notetsleepg
runtime.notewakeup
runtime.nsToSec
runtime.offAddr.add
runtime.offAddr.addr
runtime.offAddr.diff
runtime.offAddr.equal
runtime.offAddr.lessEqual
runtime.offAddr.lessThan
runtime.offAddrToLevelIndex
runtime.oneNewExtraM
runtime.open
runtime.open_trampoline
runtime.osPreemptExtEnter
runtime.osPreemptExtExit
runtime.osRelax
runtime.osSetupTLS
runtime.osStackAlloc
runtime.osStackFree
runtime.osinit
runtime.osinit_hack
runtime.osinit_hack_trampoline
runtime.osyield
runtime.osyield_no_g
runtime.overLoadFactor
runtime.pMask.clear
runtime.pMask.read
runtime.pMask.set
runtime.packPallocSum
runtime.pageIndexOf
runtime.pallocSum.end
runtime.pallocSum.max
runtime.pallocSum.start
runtime.pallocSum.unpack
runtime.panicCheck1
runtime.panicCheck2
runtime.panicIndex
runtime.panicIndexU
runtime.panicSlice3Acap
runtime.panicSlice3Alen
runtime.panicSlice3C
runtime.panicSliceAcap
runtime.panicSliceAcapU
runtime.panicSliceAlen
runtime.panicSliceAlenU
runtime.panicSliceB
runtime.panicSliceBU
runtime.panicdivide
runtime.panicdottypeE
runtime.panicdottypeI
runtime.panicfloat
runtime.panicmakeslicecap
runtime.panicmakeslicelen
runtime.panicmem
runtime.panicmemAddr
runtime.panicnildottype
runtime.panicoverflow
runtime.panicshift
runtime.panicunsafeslicelen
runtime.panicunsafeslicelen1
runtime.panicunsafeslicenilptr
runtime.panicunsafeslicenilptr1
runtime.panicunsafestringlen
runtime.panicunsafestringnilptr
runtime.panicwrap
runtime.park_m
runtime.parkunlock_c
runtime.parseByteCount
runtime.parsedebugvars
runtime.parsegodebug
runtime.pcdatastart
runtime.pcdatavalue
runtime.pcdatavalue1
runtime.pcdatavalue2
runtime.pcvalue
runtime.pcvalueCacheKey
runtime.persistentalloc
runtime.persistentalloc.func1
runtime.persistentalloc1
runtime.pidleget
runtime.pidlegetSpinning
runtime.pidleput
runtime.pinnerGetPtr
runtime.pipe
runtime.pipe_trampoline
runtime.pkgPath
runtime.plainError.Error
runtime.pollFractionalWorkerExit
runtime.pollInfo.closing
runtime.pollInfo.eventErr
runtime.pollInfo.expiredReadDeadline
runtime.pollInfo.expiredWriteDeadline
runtime.pollWork
runtime.popDefer
runtime.preemptM
runtime.preemptPark
runtime.preemptall
runtime.preemptone
runtime.prepareFreeWorkbufs
runtime.preprintpanics
runtime.preprintpanics.func1
runtime.printAncestorTraceback
runtime.printAncestorTracebackFuncInfo
runtime.printArgs
runtime.printArgs.func1
runtime.printArgs.func2
runtime.printArgs.func3
runtime.printCgoTraceback
runtime.printCgoTraceback.func1
runtime.printDebugLog
runtime.printFuncName
runtime.printOneCgoTraceback
runtime.printScavTrace
runtime.printanycustomtype
runtime.printbool
runtime.printcomplex
runtime.printcreatedby
runtime.printcreatedby1
runtime.printfloat
runtime.printhex
runtime.printindented
runtime.printint
runtime.printlock
runtime.printnl
runtime.printpanics
runtime.printpanicval
runtime.printpointer
runtime.printslice
runtime.printsp
runtime.printstring
runtime.printuint
runtime.printuintptr
runtime.printunlock
runtime.procPin
runtime.procUnpin
runtime.procresize
runtime.procyield
runtime.profIndex.addCountsAndClearFlags
runtime.profIndex.dataCount
runtime.profIndex.tagCount
runtime.profilealloc
runtime.progToPointerMask
runtime.pthread_attr_getstacksize
runtime.pthread_attr_getstacksize_trampoline
runtime.pthread_attr_init
runtime.pthread_attr_init_trampoline
runtime.pthread_attr_setdetachstate
runtime.pthread_attr_setdetachstate_trampoline
runtime.pthread_cond_init
runtime.pthread_cond_init_trampoline
runtime.pthread_cond_signal
runtime.pthread_cond_signal_trampoline
runtime.pthread_cond_timedwait_relative_np
runtime.pthread_cond_timedwait_relative_np_trampoline
runtime.pthread_cond_wait
runtime.pthread_cond_wait_trampoline
runtime.pthread_create
runtime.pthread_create_trampoline
runtime.pthread_kill
runtime.pthread_kill_trampoline
runtime.pthread_mutex_init
runtime.pthread_mutex_init_trampoline
runtime.pthread_mutex_lock
runtime.pthread_mutex_lock_trampoline
runtime.pthread_mutex_unlock
runtime.pthread_mutex_unlock_trampoline
runtime.pthread_self
runtime.pthread_self_trampoline
runtime.publicationBarrier
runtime.puintptr.ptr
runtime.putExtraM
runtime.putempty
runtime.putfull
runtime.queuefinalizer
runtime.r4
runtime.r8
runtime.raise
runtime.raise_trampoline
runtime.raisebadsignal
runtime.raiseproc
runtime.raiseproc_trampoline
runtime.rand
runtime.rand32
runtime.randinit
runtime.rawbyteslice
runtime.rawstring
runtime.rawstringtmp
runtime.read
runtime.readGOGC
runtime.readGOMEMLIMIT
runtime.readRandom
runtime.readTimeRandom
runtime.readUintptr
runtime.readUnaligned32
runtime.readUnaligned64
runtime.read_trampoline
runtime.readgstatus
runtime.readvarint
runtime.readvarintUnsafe
runtime.ready
runtime.readyWithTime
runtime.recordForPanic
runtime.recordspan
runtime.recovery
runtime.recv
runtime.recvDirect
runtime.reentersyscall
runtime.reentersyscall.func1
runtime.reentersyscall.func2
runtime.reflectOffsLock
runtime.reflectOffsUnlock
runtime.reflectcall
runtime.reflectcallmove
runtime.releaseLockRankAndM
runtime.releaseSudog
runtime.releasem
runtime.releasep
runtime.releasepNoTrace
runtime.removefinalizer
runtime.removespecial
runtime.reparsedebugvars
runtime.resetForSleep
runtime.resetspinning
runtime.resolveNameOff
runtime.resolveTypeOff
runtime.restoreGsignalStack
runtime.resumeG
runtime.retake
runtime.retryOnEAGAIN
runtime.return0
runtime.round2
runtime.roundupsize
runtime.rt0_go
runtime.rtype.nameOff
runtime.rtype.pkgpath
runtime.rtype.string
runtime.rtype.textOff
runtime.rtype.typeOff
runtime.rtype.uncommon
runtime.runExitHooks
runtime.runGCProg
runtime.runSafePointFn
runtime.runfinq
runtime.runqdrain
runtime.runqempty
runtime.runqget
runtime.runqgrab
runtime.runqput
runtime.runqputbatch
runtime.runqputslow
runtime.runqsteal
runtime.save
runtime.saveAncestors
runtime.saveBlockEventStack
runtime.saveblockevent
runtime.saveg
runtime.scanConservative
runtime.scanblock
runtime.scanframeworker
runtime.scanobject
runtime.scanstack
runtime.scavChunkData.pack
runtime.scavChunkData.shouldScavenge
runtime.schedEnableUser
runtime.schedEnabled
runtime.schedinit
runtime.schedtrace
runtime.schedtrace.func1
runtime.schedule
runtime.secure
runtime.secureEnv
runtime.selectgo
runtime.selectgo.func2
runtime.selectgo.func3
runtime.selectnbrecv
runtime.selectnbsend
runtime.sellock
runtime.selparkcommit
runtime.selunlock
runtime.semacquire
runtime.semacquire1
runtime.semacreate
runtime.semasleep
runtime.semawakeup
runtime.semrelease
runtime.semrelease1
runtime.send
runtime.sendDirect
runtime.setCheckmark
runtime.setGCPhase
runtime.setGNoWB
runtime.setGsignalStack
runtime.setMNoWB
runtime.setNonblock
runtime.setPinned
runtime.setPinned.func1
runtime.setPinned.func2
runtime.setSignalstackSP
runtime.setThreadCPUProfiler
runtime.setThreadCPUProfilerHz
runtime.setg
runtime.setprofilebucket
runtime.setsig
runtime.setsigstack
runtime.settls
runtime.shade
runtime.shouldPushSigpanic
runtime.showframe
runtime.showfuncinfo
runtime.shrinkstack
runtime.sigFetchG
runtime.sigInitIgnored
runtime.sigInstallGoHandler
runtime.sigNotOnStack
runtime.sigNoteSetup
runtime.sigNoteSleep
runtime.sigNoteWakeup
runtime.sigaction
runtime.sigaction_trampoline
runtime.sigaddset
runtime.sigaltstack
runtime.sigaltstack_trampoline
runtime.sigblock
runtime.sigdelset
runtime.sigenable
runtime.sigfwd
runtime.sigfwdgo
runtime.sighandler
runtime.signalDuringFork
runtime.signalM
runtime.signalstack
runtime.signame
runtime.sigpanic
runtime.sigpanic0
runtime.sigpipe
runtime.sigprocmask
runtime.sigprocmask_trampoline
runtime.sigprof
runtime.sigprofNonGo
runtime.sigprofNonGoPC
runtime.sigprofNonGoWrapper
runtime.sigsave
runtime.sigsend
runtime.sigtramp
runtime.sigtrampgo
runtime.slicebytetostring
runtime.spanAllocType.manual
runtime.spanClass.noscan
runtime.spanClass.sizeclass
runtime.spanHasNoSpecials
runtime.spanHasSpecials
runtime.spanOf
runtime.spanOfHeap
runtime.spanOfUnchecked
runtime.spanSetSpinePointer.lookup
runtime.spillArgs
runtime.srcFunc.name
runtime.stackalloc
runtime.stackcache_clear
runtime.stackcacherefill
runtime.stackcacherelease
runtime.stackfree
runtime.stackinit
runtime.stacklog2
runtime.stackmapdata
runtime.stackpoolalloc
runtime.stackpoolfree
runtime.startCheckmarks
runtime.startPCForTrace
runtime.startTemplateThread
runtime.startTheWorld
runtime.startTheWorld.func1
runtime.startTheWorldGC
runtime.startTheWorldWithSema
runtime.startlockedm
runtime.startm
runtime.startpanic_m
runtime.stealWork
runtime.step
runtime.stkbucket
runtime.stkobjinit
runtime.stopTheWorld
runtime.stopTheWorld.func1
runtime.stopTheWorldGC
runtime.stopTheWorldWithSema
runtime.stoplockedm
runtime.stopm
runtime.strequal
runtime.strhash
runtime.strhashFallback
runtime.stringDataOnStack
runtime.stringStructOf
runtime.stringtoslicebyte
runtime.stwReason.String
runtime.stwReason.isGC
runtime.subtract1
runtime.subtractb
runtime.suspendG
runtime.sweepClass.split
runtime.sweepone
runtime.sweepone.func1
runtime.switchToCrashStack
runtime.switchToCrashStack0
runtime.syncadjustsudogs
runtime.sysAlloc
runtime.sysAllocOS
runtime.sysFault
runtime.sysFaultOS
runtime.sysFree
runtime.sysFreeOS
runtime.sysHugePage
runtime.sysHugePageOS
runtime.sysMap
runtime.sysMapOS
runtime.sysNoHugePage
runtime.sysNoHugePageOS
runtime.sysReserve
runtime.sysReserveAligned
runtime.sysReserveOS
runtime.sysUnused
runtime.sysUnusedOS
runtime.sysUsed
runtime.sysUsedOS
runtime.sysargs
runtime.syscall
runtime.syscall6
runtime.syscall6X
runtime.syscallX
runtime.sysctl
runtime.sysctl_trampoline
runtime.sysmon
runtime.systemstack
runtime.systemstack_switch
runtime.taggedPointer.pointer
runtime.taggedPointer.tag
runtime.taggedPointerPack
runtime.templateThread
runtime.testAtomic64
runtime.throw
runtime.throw.func1
runtime.timeHistogramMetricsBuckets
runtime.timeSleepUntil
runtime.timediv
runtime.timerchandrain
runtime.toRType
runtime.tooManyOverflowBuckets
runtime.tophash
runtime.totalMutexWaitTimeNanos
runtime.traceAcquire
runtime.traceAcquireEnabled
runtime.traceAdvance
runtime.traceAdvance.func1
runtime.traceAdvance.func1.1
runtime.traceAdvance.func2
runtime.traceAdvance.func3
runtime.traceAdvance.func4
runtime.traceAdvance.func5
runtime.traceAdvance.func6
runtime.traceAllocFreeEnabled
runtime.traceBufFlush
runtime.traceCPUFlush
runtime.traceCPUFlush.func1
runtime.traceCPUSample
runtime.traceClockNow
runtime.traceClockUnitsPerSecond
runtime.traceCompressStackSize
runtime.traceEnabled
runtime.traceEventWriter.commit
runtime.traceEventWriter.end
runtime.traceEventWriter.write
runtime.traceExitedSyscall
runtime.traceExitingSyscall
runtime.traceExpWriter.ensure
runtime.traceFrequency
runtime.traceFrequency.func1
runtime.traceGoroutineStackID
runtime.traceHeapObjectID
runtime.traceLockInit
runtime.traceLocker.GCActive
runtime.traceLocker.GCDone
runtime.traceLocker.GCMarkAssistDone
runtime.traceLocker.GCMarkAssistStart
runtime.traceLocker.GCStart
runtime.traceLocker.GCSweepDone
runtime.traceLocker.GCSweepSpan
runtime.traceLocker.GCSweepStart
runtime.traceLocker.GoCreate
runtime.traceLocker.GoCreateSyscall
runtime.traceLocker.GoDestroySyscall
runtime.traceLocker.GoEnd
runtime.traceLocker.GoPark
runtime.traceLocker.GoPreempt
runtime.traceLocker.GoSched
runtime.traceLocker.GoStart
runtime.traceLocker.GoStop
runtime.traceLocker.GoSysCall
runtime.traceLocker.GoSysExit
runtime.traceLocker.GoUnpark
runtime.traceLocker.Gomaxprocs
runtime.traceLocker.GoroutineStackAlloc
runtime.traceLocker.GoroutineStackFree
runtime.traceLocker.HeapAlloc
runtime.traceLocker.HeapGoal
runtime.traceLocker.HeapObjectAlloc
runtime.traceLocker.HeapObjectFree
runtime.traceLocker.ProcStart
runtime.traceLocker.ProcSteal
runtime.traceLocker.ProcStop
runtime.traceLocker.STWDone
runtime.traceLocker.STWStart
runtime.traceLocker.SpanAlloc
runtime.traceLocker.SpanFree
runtime.traceLocker.eventWriter
runtime.traceLocker.ok
runtime.traceLocker.rtype
runtime.traceLocker.stack
runtime.traceLocker.startPC
runtime.traceLocker.string
runtime.traceLocker.writer
runtime.traceNextGen
runtime.traceReadCPU
runtime.traceReader
runtime.traceReaderAvailable
runtime.traceRegisterLabelsAndReasons
runtime.traceRelease
runtime.traceShuttingDown
runtime.traceSpanID
runtime.traceSpanTypeAndClass
runtime.traceStack
runtime.traceStopReadCPU
runtime.traceThreadDestroy
runtime.traceThreadDestroy.func1
runtime.traceTryAcquire
runtime.traceTryAcquireEnabled
runtime.traceWriter.end
runtime.traceWriter.ensure
runtime.traceWriter.event
runtime.traceWriter.flush
runtime.traceWriter.flush.func1
runtime.traceWriter.refill
runtime.traceWriter.refill.func1
runtime.traceWriter.writeGoStatus
runtime.traceWriter.writeProcStatus
runtime.traceWriter.writeProcStatusForP
runtime.traceback
runtime.traceback1
runtime.traceback1.func1
runtime.traceback2
runtime.traceback2.func1
runtime.tracebackHexdump
runtime.tracebackHexdump.func1
runtime.tracebackPCs
runtime.tracebackothers
runtime.tracebackothers.func1
runtime.tracebacktrap
runtime.tracefpunwindoff
runtime.tryRecordGoroutineProfile
runtime.tryRecordGoroutineProfileWB
runtime.trygetfull
runtime.typeAssert
runtime.typeBitsBulkBarrier
runtime.typePointers.fastForward
runtime.typePointers.next
runtime.typePointers.nextFast
runtime.typedmemclr
runtime.typedmemmove
runtime.typedslicecopy
runtime.typehash
runtime.typelinksinit
runtime.typesEqual
runtime.unblockTimerChan
runtime.unblocksig
runtime.unlock
runtime.unlock2
runtime.unlockOSThread
runtime.unlockWithRank
runtime.unlockextra
runtime.unminit
runtime.unminitSignals
runtime.unpackScavChunkData
runtime.unreachableMethod
runtime.unsafeTraceExpWriter
runtime.unsafeTraceWriter
runtime.unspillArgs
runtime.usesLibcall
runtime.usleep
runtime.usleep_no_g
runtime.usleep_trampoline
runtime.validSIGPROF
runtime.waitReason.String
runtime.waitReason.isMutexWait
runtime.waitReason.isWaitingForGC
runtime.wakeNetPoller
runtime.wakeNetpoll
runtime.wakefing
runtime.wakep
runtime.walltime
runtime.walltime_trampoline
runtime.wantAsyncPreempt
runtime.wbBufFlush
runtime.wbBufFlush.func1
runtime.wbBufFlush1
runtime.wbMove
runtime.wbZero
runtime.wirep
runtime.wirep.func1
runtime.wirep.func2
runtime.worldStarted
runtime.worldStopped
runtime.write
runtime.write1
runtime.writeErr
runtime.writeErrData
runtime.writeErrStr
runtime.write_trampoline
runtime/debug.SetTraceback
runtime/internal/sys.LeadingZeros64
runtime/internal/sys.LeadingZeros8
runtime/internal/sys.OnesCount64
setg_gcc
slices.SortStableFunc[go.shape.[]internal/fmtsort.KeyValue,go.shape.struct { Key reflect.Value; Value reflect.Value }]
slices.insertionSortCmpFunc[go.shape.struct { Key reflect.Value; Value reflect.Value }]
slices.rotateCmpFunc[go.shape.struct { Key reflect.Value; Value reflect.Value }]
slices.stableCmpFunc[go.shape.struct { Key reflect.Value; Value reflect.Value }]
slices.swapRangeCmpFunc[go.shape.struct { Key reflect.Value; Value reflect.Value }]
slices.symMergeCmpFunc[go.shape.struct { Key reflect.Value; Value reflect.Value }]
strconv.(*decimal).Assign
strconv.(*decimal).Round
strconv.(*decimal).RoundDown
strconv.(*decimal).RoundUp
strconv.(*decimal).Shift
strconv.AppendFloat
strconv.AppendQuote
strconv.AppendQuoteRune
strconv.AppendQuoteRuneToASCII
strconv.AppendQuoteToASCII
strconv.CanBackquote
strconv.FormatInt
strconv.IsPrint
strconv.Itoa
strconv.appendEscapedRune
strconv.appendQuotedRuneWith
strconv.appendQuotedWith
strconv.bigFtoa
strconv.bsearch[go.shape.[]uint16,go.shape.uint16]
strconv.bsearch[go.shape.[]uint32,go.shape.uint32]
strconv.computeBounds
strconv.divisibleByPower5
strconv.divmod1e9
strconv.fmtB
strconv.fmtE
strconv.fmtF
strconv.fmtX
strconv.formatBits
strconv.formatDecimal
strconv.formatDigits
strconv.genericFtoa
strconv.init
strconv.isInGraphicList
strconv.isPowerOfTwo
strconv.leftShift
strconv.lower
strconv.mulByLog10Log2
strconv.mulByLog2Log10
strconv.mult128bitPow10
strconv.mult64bitPow10
strconv.prefixIsLessThan
strconv.rightShift
strconv.roundShortest
strconv.ryuDigits
strconv.ryuDigits32
strconv.ryuFtoaFixed32
strconv.ryuFtoaFixed64
strconv.ryuFtoaShortest
strconv.shouldRoundUp
strconv.small
strconv.trim
sync.(*Map).Load
sync.(*Map).LoadOrStore
sync.(*Map).Range
sync.(*Map).dirtyLocked
sync.(*Map).loadReadOnly
sync.(*Map).missLocked
sync.(*Mutex).Lock
sync.(*Mutex).Unlock
sync.(*Mutex).lockSlow
sync.(*Mutex).unlockSlow
sync.(*Once).Do
sync.(*Once).doSlow
sync.(*Once).doSlow.deferwrap1
sync.(*Once).doSlow.deferwrap2
sync.(*Pool).Get
sync.(*Pool).Put
sync.(*Pool).getSlow
sync.(*Pool).pin
sync.(*Pool).pinSlow
sync.(*Pool).pinSlow.deferwrap1
sync.(*RWMutex).RLock
sync.(*RWMutex).RUnlock
sync.(*RWMutex).rUnlockSlow
sync.(*WaitGroup).Add
sync.(*WaitGroup).Done
sync.(*WaitGroup).Wait
sync.(*entry).load
sync.(*entry).tryExpungeLocked
sync.(*entry).tryLoadOrStore
sync.(*entry).unexpungeLocked
sync.(*poolChain).popHead
sync.(*poolChain).popTail
sync.(*poolChain).pushHead
sync.(*poolDequeue).pack
sync.(*poolDequeue).popHead
sync.(*poolDequeue).popTail
sync.(*poolDequeue).pushHead
sync.(*poolDequeue).unpack
sync.event
sync.fatal
sync.indexLocal
sync.init
sync.init.0
sync.init.1
sync.newEntry
sync.poolCleanup
sync.runtime_Semacquire
sync.runtime_SemacquireMutex
sync.runtime_SemacquireRWMutexR
sync.runtime_Semrelease
sync.runtime_canSpin
sync.runtime_doSpin
sync.runtime_nanotime
sync.runtime_notifyListCheck
sync.runtime_procPin
sync.runtime_procUnpin
sync.runtime_registerPoolCleanup
sync.throw
sync/atomic.(*Int32).Add
sync/atomic.(*Pointer[go.shape.interface {}]).CompareAndSwap
sync/atomic.(*Pointer[go.shape.interface {}]).Load
sync/atomic.(*Pointer[go.shape.interface {}]).Store
sync/atomic.(*Pointer[go.shape.struct { Cur uint64; Max uint64 }]).Store
sync/atomic.(*Pointer[go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }]).CompareAndSwap
sync/atomic.(*Pointer[go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }]).Load
sync/atomic.(*Pointer[go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }]).Load
sync/atomic.(*Pointer[go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }]).Store
sync/atomic.(*Pointer[go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }]).CompareAndSwap
sync/atomic.(*Pointer[go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }]).Load
sync/atomic.(*Pointer[go.shape.struct { os.dir uintptr }]).Swap
sync/atomic.(*Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]).Load
sync/atomic.(*Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]).Store
sync/atomic.(*Pointer[go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }]).CompareAndSwap
sync/atomic.(*Pointer[go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }]).Load
sync/atomic.(*Pointer[go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }]).Store
sync/atomic.(*Uint32).Load
sync/atomic.(*Uint32).Store
sync/atomic.(*Uint64).Add
sync/atomic.(*Uint64).CompareAndSwap
sync/atomic.(*Uint64).Load
sync/atomic.(*Uint64).Load-fm
sync/atomic.(*Uint64).Store
sync/atomic.(*Value).Load
sync/atomic.(*Value).Store
sync/atomic.CompareAndSwapPointer
sync/atomic.CompareAndSwapUintptr
sync/atomic.StorePointer
sync/atomic.StoreUintptr
sync/atomic.SwapPointer
sync/atomic.SwapUintptr
sync/atomic.runtime_procPin
sync/atomic.runtime_procUnpin
syscall.(*Errno).Error
syscall.(*Errno).Is
syscall.(*Signal).String
syscall.(*Timespec).Unix
syscall.BytePtrFromString
syscall.ByteSliceFromString
syscall.Close
syscall.Errno.Error
syscall.Errno.Is
syscall.Exit
syscall.Fstat
syscall.Getenv
syscall.Getenv.deferwrap1
syscall.Getrlimit
syscall.Getwd
syscall.Open
syscall.Read
syscall.Seek
syscall.SetNonblock
syscall.Signal.String
syscall.Stat
syscall.SysctlUint32
syscall.Write
syscall.adjustFileLimit
syscall.clen
syscall.closedir
syscall.copyenv
syscall.errnoErr
syscall.execve
syscall.fcntl
syscall.getcwd
syscall.init
syscall.init.0
syscall.init.1
syscall.libc_close_trampoline
syscall.libc_closedir_trampoline
syscall.libc_dup2_trampoline
syscall.libc_execve_trampoline
syscall.libc_fcntl_trampoline
syscall.libc_fstat64_trampoline
syscall.libc_getcwd_trampoline
syscall.libc_getrlimit_trampoline
syscall.libc_lseek_trampoline
syscall.libc_mmap_trampoline
syscall.libc_munmap_trampoline
syscall.libc_open_trampoline
syscall.libc_read_trampoline
syscall.libc_setrlimit_trampoline
syscall.libc_stat64_trampoline
syscall.libc_sysctl_trampoline
syscall.libc_write_trampoline
syscall.mmap
syscall.munmap
syscall.nametomib
syscall.rawSyscall
syscall.read
syscall.rsaAlignOf
syscall.runtime_envs
syscall.setrlimit
syscall.syscall
syscall.syscall6
syscall.syscall6X
syscall.syscallX
syscall.sysctl
syscall.write
time.(*Location).String
time.(*Location).firstZoneUsed
time.(*Location).get
time.(*Location).lookup
time.(*Location).lookupFirstZone
time.(*Time).GoString
time.(*Time).String
time.(*Time).nsec
time.(*Time).sec
time.(*Time).unixSec
time.(*dataIO).big4
time.(*dataIO).big8
time.(*dataIO).byte
time.(*dataIO).read
time.(*dataIO).rest
time.(*fileSizeError).Error
time.LoadLocationFromTZData
time.Month.String
time.Sleep
time.Time.AppendFormat
time.Time.Format
time.Time.GoString
time.Time.Location
time.Time.Nanosecond
time.Time.String
time.Time.abs
time.Time.appendFormat
time.Time.appendFormatRFC3339
time.Time.locabs
time.Unix
time.Weekday.String
time.absClock
time.absDate
time.absWeekday
time.appendInt
time.appendInt.func1
time.appendNano
time.byteString
time.closefd
time.daysIn
time.daysSinceEpoch
time.digitsLen
time.fileSizeError.Error
time.findZone
time.fmtInt
time.get2
time.get4
time.gorootZoneSource
time.init
time.initLocal
time.isDigit[go.shape.string]
time.isLeap
time.loadLocation
time.loadTzinfo
time.loadTzinfoFromDirOrZip
time.loadTzinfoFromZip
time.loadTzinfoFromZip.deferwrap1
time.nextStdChunk
time.now
time.open
time.preadn
time.quote
time.read
time.readFile
time.readFile.deferwrap1
time.separator
time.startsWithLowerCase
time.stdFracSecond
time.tzruleTime
time.tzset
time.tzsetName
time.tzsetNum
time.tzsetOffset
time.tzsetRule
time.unixTime
type:.eq.[2]runtime.Frame
type:.eq.[6]internal/cpu.option
type:.eq.context.valueCtx
type:.eq.fmt.fmt
type:.eq.internal/abi.ITab
type:.eq.internal/abi.RegArgs
type:.eq.internal/abi.UncommonType
type:.eq.internal/bisect.cond
(dlv) funcs main.main
main.main
main.main.func1
main.main.gowrap1
main.main.gowrap2
main.main.gowrap3
(dlv) funcs ^main.*
main.consumeValues
main.consumeValues.deferwrap1
main.main
main.main.func1
main.main.gowrap1
main.main.gowrap2
main.main.gowrap3
main.produceValues
main.produceValues.deferwrap1
(dlv) libraries
(dlv) sources
/Users/weitecklee/coding/ardanlabs/ultimate_go_debugging/day-2/session/main.go
/usr/local/Cellar/go/1.23.0/libexec/src/bytes/buffer.go
/usr/local/Cellar/go/1.23.0/libexec/src/bytes/bytes.go
/usr/local/Cellar/go/1.23.0/libexec/src/bytes/reader.go
/usr/local/Cellar/go/1.23.0/libexec/src/cmp/cmp.go
/usr/local/Cellar/go/1.23.0/libexec/src/context/context.go
/usr/local/Cellar/go/1.23.0/libexec/src/encoding/binary/binary.go
/usr/local/Cellar/go/1.23.0/libexec/src/encoding/binary/native_endian_little.go
/usr/local/Cellar/go/1.23.0/libexec/src/encoding/binary/varint.go
/usr/local/Cellar/go/1.23.0/libexec/src/errors/errors.go
/usr/local/Cellar/go/1.23.0/libexec/src/errors/join.go
/usr/local/Cellar/go/1.23.0/libexec/src/errors/wrap.go
/usr/local/Cellar/go/1.23.0/libexec/src/fmt/errors.go
/usr/local/Cellar/go/1.23.0/libexec/src/fmt/format.go
/usr/local/Cellar/go/1.23.0/libexec/src/fmt/print.go
/usr/local/Cellar/go/1.23.0/libexec/src/fmt/scan.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/abi.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/abi_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/compiletype.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/escape.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/funcpc.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/iface.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/map.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/rangefuncconsts.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/runtime.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/stack.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/switch.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/symtab.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/abi/type.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bisect/bisect.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/bytealg.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/compare_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/compare_native.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/count_native.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/equal_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/equal_generic.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/equal_native.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/index_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/index_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/index_native.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/indexbyte_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/indexbyte_native.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/bytealg/lastindexbyte_generic.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/byteorder/byteorder.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/chacha8rand/chacha8.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/chacha8rand/chacha8_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/internal/chacha8rand/chacha8_generic.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/coverage/rtcov/rtcov.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/cpu/cpu.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/cpu/cpu_x86.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/cpu/cpu_x86.s
/usr/local/Cellar/go/1.23.0/libexec/src/internal/filepathlite/path.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/filepathlite/path_nonwindows.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/filepathlite/path_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/fmtsort/sort.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/godebug/godebug.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/godebugs/table.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/itoa/itoa.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/oserror/errors.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/errno_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_fsync_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_mutex.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_opendir_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_poll_runtime.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_posix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_unixjs.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/fd_writev_libc.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/hook_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/iovec_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/sendfile.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/sendfile_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/sockopt.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/sockopt_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/sockoptip.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/sys_cloexec.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/poll/writev.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/profilerecord/profilerecord.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/race/norace.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/reflectlite/swapper.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/reflectlite/type.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/reflectlite/value.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/runtime/atomic/atomic_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/runtime/atomic/stubs.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/runtime/atomic/types.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/runtime/atomic/types_64bit.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/runtime/atomic/unaligned.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/runtime/exithook/hooks.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/stringslite/strings.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/execenv/execenv_default.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/arc4random_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/at_libc2.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/at_sysnum_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/constants.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/eaccess_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/fcntl_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/kernel_version_other.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/net.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/net_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/nofollow_posix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/nonblocking_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/pty_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/tcsetpgrp_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/syscall/unix/user_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/testlog/exit.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/testlog/log.go
/usr/local/Cellar/go/1.23.0/libexec/src/internal/unsafeheader/unsafeheader.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/format.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/fs.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/glob.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/readdir.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/readfile.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/stat.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/sub.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/fs/walk.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/io.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/ioutil/ioutil.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/ioutil/tempfile.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/multi.go
/usr/local/Cellar/go/1.23.0/libexec/src/io/pipe.go
/usr/local/Cellar/go/1.23.0/libexec/src/iter/iter.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/abs.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/acosh.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/asin.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/asinh.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/atan.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/atan2.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/atanh.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/bits.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/bits/bits.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/bits/bits_errors.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/bits/bits_tables.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/cbrt.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/const.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/copysign.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/dim.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/dim_asm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/erf.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/erfinv.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/exp.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/exp2_noasm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/exp_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/exp_asm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/expm1.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/floor.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/floor_asm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/fma.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/frexp.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/gamma.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/hypot.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/hypot_asm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/j0.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/j1.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/jn.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/ldexp.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/lgamma.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/log.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/log10.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/log1p.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/log_asm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/logb.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/mod.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/modf.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/modf_noasm.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/nextafter.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/pow.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/pow10.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/rand/exp.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/rand/normal.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/rand/rand.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/rand/rng.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/rand/zipf.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/remainder.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/signbit.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/sin.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/sincos.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/sinh.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/sqrt.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/stubs.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/tan.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/tanh.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/trig_reduce.go
/usr/local/Cellar/go/1.23.0/libexec/src/math/unsafe.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/dir.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/dir_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/env.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/error.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/error_errno.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/exec.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/exec_nohandle.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/exec_posix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/exec_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/executable.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/executable_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/file.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/file_open_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/file_posix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/file_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/getwd.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/path.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/path_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/pidfd_other.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/pipe_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/proc.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/rawconn.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/removeall_at.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/signal/signal.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/signal/signal_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/stat.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/stat_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/stat_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/sticky_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/sys.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/sys_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/sys_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/tempfile.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/types.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/types_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/wait_unimp.go
/usr/local/Cellar/go/1.23.0/libexec/src/os/zero_copy_stub.go
/usr/local/Cellar/go/1.23.0/libexec/src/path/match.go
/usr/local/Cellar/go/1.23.0/libexec/src/path/path.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/abi.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/asm_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/badlinkname.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/deepequal.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/float32reg_generic.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/iter.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/makefunc.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/swapper.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/type.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/value.go
/usr/local/Cellar/go/1.23.0/libexec/src/reflect/visiblefields.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/alg.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/arena.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/asan0.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/asm.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/asm_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/atomic_pointer.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cgo.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cgocall.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cgocallback.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cgocheck.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/chan.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/checkptr.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/compiler.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/complex.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/coro.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/covercounter.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/covermeta.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cpuflags.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cpuflags_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cpuprof.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/cputicks.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/create_file_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/debug.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/debugcall.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/debuglog.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/debuglog_off.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/defs_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/duff_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/env_posix.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/error.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/extern.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/fastlog2.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/fastlog2table.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/fds_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/float.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/hash64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/heapdump.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/histogram.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/iface.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/internal/math/math.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/internal/sys/consts.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/internal/sys/consts_norace.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/internal/sys/intrinsics.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/internal/sys/nih.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/lfstack.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/lock_sema.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/lockrank.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/lockrank_off.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/malloc.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/map.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/map_fast32.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/map_fast64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/map_faststr.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mbarrier.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mbitmap.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mcache.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mcentral.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mcheckmark.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mem.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mem_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/memclr_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/memmove_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/metrics.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mfinal.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mfixalloc.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgc.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgclimit.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgcmark.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgcpacer.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgcscavenge.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgcstack.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgcsweep.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mgcwork.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mheap.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/minmax.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mpagealloc.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mpagealloc_64bit.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mpagecache.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mpallocbits.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mprof.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mranges.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/msan0.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/msize.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mspanset.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mstats.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/mwbbuf.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/nbpipe_pipe.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/netpoll.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/netpoll_kqueue.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/netpoll_kqueue_event.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/nonwindows_stub.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/os_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/os_nonopenbsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/os_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/os_unix_nonlinux.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/panic.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/pinner.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/plugin.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/preempt.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/preempt_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/preempt_nonwindows.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/print.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/proc.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/profbuf.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/proflabel.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/race0.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/rand.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/rdebug.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/retry.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/rt0_darwin_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/runtime.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/runtime1.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/runtime2.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/runtime_boring.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/rwmutex.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/security_issetugid.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/security_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/select.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sema.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/signal_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/signal_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/signal_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/signal_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sigqueue.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sizeclasses.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/slice.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/softfloat64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/stack.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/stkframe.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/string.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/stubs.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/stubs_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/stubs_nonlinux.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/symtab.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/symtabinl.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sys_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sys_darwin_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sys_libc.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sys_nonppc64x.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/sys_x86.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tagptr.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tagptr_64bit.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/test_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/time.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/time_nofake.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/timestub.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tls_stub.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/trace.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/traceallocfree.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/traceback.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracebuf.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracecpu.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/traceevent.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/traceexp.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracemap.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/traceregion.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/traceruntime.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracestack.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracestatus.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracestring.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracetime.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/tracetype.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/type.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/typekind.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/unsafe.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/utf8.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/vdso_in_none.go
/usr/local/Cellar/go/1.23.0/libexec/src/runtime/write_err.go
/usr/local/Cellar/go/1.23.0/libexec/src/slices/slices.go
/usr/local/Cellar/go/1.23.0/libexec/src/slices/sort.go
/usr/local/Cellar/go/1.23.0/libexec/src/slices/zsortanyfunc.go
/usr/local/Cellar/go/1.23.0/libexec/src/slices/zsortordered.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/atob.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/atoc.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/atof.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/atoi.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/bytealg.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/ctoa.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/decimal.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/eisel_lemire.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/ftoa.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/ftoaryu.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/isprint.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/itoa.go
/usr/local/Cellar/go/1.23.0/libexec/src/strconv/quote.go
/usr/local/Cellar/go/1.23.0/libexec/src/strings/compare.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/atomic/doc.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/atomic/type.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/atomic/value.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/cond.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/map.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/mutex.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/once.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/oncefunc.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/pool.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/poolqueue.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/runtime.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/runtime2.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/rwmutex.go
/usr/local/Cellar/go/1.23.0/libexec/src/sync/waitgroup.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/bpf_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/dirent.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/env_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/exec_libc2.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/exec_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/flock_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/forkpipe.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/net.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/rlimit.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/rlimit_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/route_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/route_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/sockcmsg_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/sockcmsg_unix_other.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/syscall.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/syscall_bsd.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/syscall_darwin.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/syscall_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/syscall_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/time_nofake.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/timestruct.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/zerrors_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/zsyscall_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/zsyscall_darwin_amd64.s
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/zsysnum_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/syscall/ztypes_darwin_amd64.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/format.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/format_rfc3339.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/sleep.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/sys_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/tick.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/time.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/zoneinfo.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/zoneinfo_goroot.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/zoneinfo_read.go
/usr/local/Cellar/go/1.23.0/libexec/src/time/zoneinfo_unix.go
/usr/local/Cellar/go/1.23.0/libexec/src/unicode/casetables.go
/usr/local/Cellar/go/1.23.0/libexec/src/unicode/digit.go
/usr/local/Cellar/go/1.23.0/libexec/src/unicode/graphic.go
/usr/local/Cellar/go/1.23.0/libexec/src/unicode/letter.go
/usr/local/Cellar/go/1.23.0/libexec/src/unicode/tables.go
/usr/local/Cellar/go/1.23.0/libexec/src/unicode/utf8/utf8.go
<autogenerated>
(dlv) types
**internal/abi.ITab
**internal/abi.InterfaceType
**internal/abi.Type
**os/signal.handler
**runtime._defer
**runtime.arenaHint
**runtime.bmap
**runtime.dbgVar
**runtime.g
**runtime.initTask
**runtime.m
**runtime.mcache
**runtime.moduledata
**runtime.mspan
**runtime.notInHeap
**runtime.p
**runtime.special
**runtime.stackWorkBuf
**runtime.sudog
**sync.Pool
**sync.entry
**uint8
**unicode.RangeTable
*[1024]uintptr
*[1048576]runtime.inlinedCall
*[131072]uint16
*[14]syscall._C_int
*[15]runtime.traceArg
*[16]uint64
*[16]uint8
*[16]uintptr
*[171]uint8
*[1]int
*[1]interface {}
*[1]os.Signal
*[1]string
*[1]uintptr
*[256]runtime.guintptr
*[2]float32
*[2]float64
*[2]interface {}
*[2]runtime.Frame
*[2]syscall._C_int
*[2]uint8
*[2]uintptr
*[32]uint8
*[3]runtime.traceArg
*[3]uintptr
*[4194304]*runtime.heapArena
*[4]runtime.traceArg
*[4]uint64
*[4]uint8
*[4]uintptr
*[50]uint8
*[5]uintptr
*[5]unsafe.Pointer
*[65536]runtime.scase
*[6]internal/cpu.option
*[8192]runtime.pallocData
*[8]runtime.pcvalueCacheEnt
*[8]uint8
*[96]uint8
*[]*runtime.bmap
*[]*runtime.moduledata
*[]runtime.ancestorInfo
*[]runtime.untracedG·4
*[]syscall.Iovec
*[]uint8
*[]unsafe.Pointer
*bool
*bucket<*uint8,[]uint8>
*bucket<chan<- os.Signal,*os/signal.handler>
*bucket<context.canceler,struct {}>
*bucket<int32,unsafe.Pointer>
*bucket<interface {},*sync.entry>
*bucket<internal/abi.TypeOff,*internal/abi.Type>
*bucket<runtime._typePair,struct {}>
*bucket<string,*unicode.RangeTable>
*bucket<string,bool>
*bucket<string,int>
*bucket<string,runtime.metricData>
*bucket<uint32,[]*internal/abi.Type>
*bucket<uint64,bool>
*bucket<unsafe.Pointer,int32>
*context.backgroundCtx
*context.cancelCtx
*context.emptyCtx
*context.stopCtx
*context.timerCtx
*context.valueCtx
*error
*errors.errorString
*float32
*float64
*fmt.buffer
*fmt.fmt
*fmt.pp
*func()
*func(string) func()
*func(string, string)
*go.shape.a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7
*go.shape.func()
*go.shape.func(string) func()
*go.shape.func(string, string)
*go.shape.interface {}
*go.shape.string
*go.shape.struct { Cur uint64; Max uint64 }
*go.shape.struct { Key reflect.Value; Value reflect.Value }
*go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }
*go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }
*go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }
*go.shape.struct { os.dir uintptr }
*go.shape.struct { runtime.heap bool; runtime.rangefunc bool; runtime.sp uintptr; runtime.pc uintptr; runtime.fn func(); runtime.link *runtime._defer; runtime.head *internal/runtime/atomic.Pointer[runtime._defer] }
*go.shape.struct { runtime.lfnode; runtime.popped internal/runtime/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }
*go.shape.struct { runtime.r runtime.profAtomic; runtime.w runtime.profAtomic; runtime.overflow internal/runtime/atomic.Uint64; runtime.overflowTime internal/runtime/atomic.Uint64; runtime.eof internal/runtime/atomic.Uint32; runtime.hdrsize uintptr; runtime.data []uint64; runtime.tags []unsafe.Pointer; runtime.rNext runtime.profIndex; runtime.overflowBuf []uint64; runtime.wait runtime.note }
*go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
*go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }
*hash<*uint8,[]uint8>
*hash<chan<- os.Signal,*os/signal.handler>
*hash<context.canceler,struct {}>
*hash<int32,unsafe.Pointer>
*hash<interface {},*sync.entry>
*hash<internal/abi.TypeOff,*internal/abi.Type>
*hash<runtime._typePair,struct {}>
*hash<string,*unicode.RangeTable>
*hash<string,bool>
*hash<string,int>
*hash<string,runtime.metricData>
*hash<uint32,[]*internal/abi.Type>
*hash<uint64,bool>
*hash<unsafe.Pointer,int32>
*hchan<bool>
*hchan<int>
*hchan<main.packet>
*hchan<os.Signal>
*hchan<struct {}>
*hchan<time.Time>
*hchan<uint32>
*int
*int32
*int64
*int8
*interface {}
*internal/abi.ArrayType
*internal/abi.ChanType
*internal/abi.EmptyInterface
*internal/abi.FuncType
*internal/abi.ITab
*internal/abi.Imethod
*internal/abi.IntArgRegBitmap
*internal/abi.InterfaceSwitch
*internal/abi.InterfaceSwitchCache
*internal/abi.InterfaceSwitchCacheEntry
*internal/abi.InterfaceType
*internal/abi.Kind
*internal/abi.MapType
*internal/abi.Method
*internal/abi.PtrType
*internal/abi.RegArgs
*internal/abi.SliceType
*internal/abi.StructField
*internal/abi.StructType
*internal/abi.Type
*internal/abi.TypeAssert
*internal/abi.TypeAssertCache
*internal/abi.TypeAssertCacheEntry
*internal/abi.UncommonType
*internal/bisect.Matcher
*internal/bisect.cond
*internal/bisect.dedup
*internal/bisect.parseError
*internal/chacha8rand.State
*internal/cpu.option
*internal/fmtsort.KeyValue
*internal/godebug.Setting
*internal/godebug.runtimeStderr
*internal/godebug.setting
*internal/godebug.value
*internal/godebugs.Info
*internal/poll.DeadlineExceededError
*internal/poll.FD
*internal/poll.SysFile
*internal/poll.errNetClosing
*internal/poll.fdMutex
*internal/poll.pollDesc
*internal/profilerecord.StackRecord
*internal/reflectlite.rtype
*internal/runtime/atomic.Bool
*internal/runtime/atomic.Float64
*internal/runtime/atomic.Int32
*internal/runtime/atomic.Int64
*internal/runtime/atomic.Pointer[func()]
*internal/runtime/atomic.Pointer[go.shape.a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7]
*internal/runtime/atomic.Pointer[go.shape.func()]
*internal/runtime/atomic.Pointer[go.shape.func(string) func()]
*internal/runtime/atomic.Pointer[go.shape.func(string, string)]
*internal/runtime/atomic.Pointer[go.shape.string]
*internal/runtime/atomic.Pointer[go.shape.struct { runtime.heap bool; runtime.rangefunc bool; runtime.sp uintptr; runtime.pc uintptr; runtime.fn func(); runtime.link *runtime._defer; runtime.head *internal/runtime/atomic.Pointer[runtime._defer] }]
*internal/runtime/atomic.Pointer[go.shape.struct { runtime.lfnode; runtime.popped internal/runtime/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]
*internal/runtime/atomic.Pointer[go.shape.struct { runtime.r runtime.profAtomic; runtime.w runtime.profAtomic; runtime.overflow internal/runtime/atomic.Uint64; runtime.overflowTime internal/runtime/atomic.Uint64; runtime.eof internal/runtime/atomic.Uint32; runtime.hdrsize uintptr; runtime.data []uint64; runtime.tags []unsafe.Pointer; runtime.rNext runtime.profIndex; runtime.overflowBuf []uint64; runtime.wait runtime.note }]
*internal/runtime/atomic.Pointer[runtime._defer]
*internal/runtime/atomic.Pointer[runtime.spanSetBlock]
*internal/runtime/atomic.Uint32
*internal/runtime/atomic.Uint64
*internal/runtime/atomic.Uint8
*internal/runtime/atomic.Uintptr
*internal/runtime/atomic.UnsafePointer
*internal/runtime/exithook.Hook
*internal/unsafeheader.Slice
*internal/unsafeheader.String
*io.discard
*io/fs.FileMode
*io/fs.PathError
*main.packet
*map[internal/abi.TypeOff]*internal/abi.Type
*math/rand.Rand
*math/rand.lockedSource
*math/rand.rngSource
*math/rand.runtimeSource
*os.File
*os.Signal
*os.SyscallError
*os.dirInfo
*os.file
*os.fileStat
*os/signal.handler
*os/signal.stopping
*reflect.ChanDir
*reflect.Kind
*reflect.MapIter
*reflect.Method
*reflect.Value
*reflect.ValueError
*reflect.abiSeq
*reflect.abiStep
*reflect.bitVector
*reflect.hiter
*reflect.interfaceType
*reflect.makeFuncCtxt
*reflect.mapType
*reflect.methodValue
*reflect.nonEmptyInterface
*reflect.ptrType
*reflect.rtype
*reflect.sliceType
*reflect.structType
*runtime.Frame
*runtime.Frames
*runtime.Func
*runtime.PanicNilError
*runtime.Pinner
*runtime.TypeAssertionError
*runtime._defer
*runtime._func
*runtime._panic
*runtime.activeSweep
*runtime.addrRange
*runtime.addrRanges
*runtime.adjustinfo
*runtime.ancestorInfo
*runtime.arenaHint
*runtime.arenaIdx
*runtime.atomicHeadTailIndex
*runtime.atomicMSpanPointer
*runtime.atomicOffAddr
*runtime.atomicScavChunkData
*runtime.atomicSpanSetSpinePointer
*runtime.bitvector
*runtime.blockRecord
*runtime.bmap
*runtime.boundsError
*runtime.bucket
*runtime.buckhashArray
*runtime.cgoCallers
*runtime.cgoSymbolizerArg
*runtime.checkmarksMap
*runtime.consistentHeapStats
*runtime.coro
*runtime.cpuProfile
*runtime.cpuStats
*runtime.dbgVar
*runtime.debugCallWrapArgs
*runtime.eface
*runtime.errorAddressString
*runtime.errorString
*runtime.finblock
*runtime.findfuncbucket
*runtime.fixalloc
*runtime.funcinl
*runtime.functab
*runtime.funcval
*runtime.g
*runtime.gList
*runtime.gQueue
*runtime.gTraceState
*runtime.gcBgMarkWorkerNode
*runtime.gcBits
*runtime.gcBitsArena
*runtime.gcCPULimiterState
*runtime.gcControllerState
*runtime.gcWork
*runtime.gclink
*runtime.gobuf
*runtime.godebugInc
*runtime.goroutineProfileStateHolder
*runtime.gsignalStack
*runtime.guintptr
*runtime.hchan
*runtime.heapArena
*runtime.heapStatsDelta
*runtime.hiter
*runtime.hmap
*runtime.iface
*runtime.initTask
*runtime.inlineUnwinder
*runtime.itabTableType
*runtime.keventt
*runtime.lfnode
*runtime.lfstack
*runtime.limiterEvent
*runtime.linearAlloc
*runtime.liveUserArenaChunk
*runtime.lockRank
*runtime.lockTimer
*runtime.m
*runtime.mLockProfile
*runtime.mOS
*runtime.mProfCycleHolder
*runtime.mSpanList
*runtime.mSpanStateBox
*runtime.mapextra
*runtime.markBits
*runtime.mcache
*runtime.mcentral
*runtime.memRecord
*runtime.memRecordCycle
*runtime.metricFloat64Histogram
*runtime.metricValue
*runtime.mheap
*runtime.mlink
*runtime.moduledata
*runtime.modulehash
*runtime.mspan
*runtime.muintptr
*runtime.mutex
*runtime.notInHeap
*runtime.note
*runtime.p
*runtime.pTraceState
*runtime.pageAlloc
*runtime.pageBits
*runtime.pageCache
*runtime.pallocBits
*runtime.pallocData
*runtime.pallocSum
*runtime.pcHeader
*runtime.persistentAlloc
*runtime.piController
*runtime.pinState
*runtime.pinner
*runtime.pinnerBits
*runtime.plainError
*runtime.pollCache
*runtime.pollDesc
*runtime.profAtomic
*runtime.profBuf
*runtime.ptabEntry
*runtime.pthreadattr
*runtime.pthreadcond
*runtime.pthreadcondattr
*runtime.pthreadmutex
*runtime.pthreadmutexattr
*runtime.puintptr
*runtime.randomEnum
*runtime.randomOrder
*runtime.reflectMethodValue
*runtime.regs64
*runtime.rwmutex
*runtime.savedOpenDeferState
*runtime.scase
*runtime.scavChunkData
*runtime.scavChunkFlags
*runtime.scavengeIndex
*runtime.scavengerState
*runtime.semTable
*runtime.semaRoot
*runtime.sigctxt
*runtime.siginfo
*runtime.sigset
*runtime.spanSet
*runtime.spanSetBlock
*runtime.spanSetBlockAlloc
*runtime.special
*runtime.specialPinCounter
*runtime.specialReachable
*runtime.specialWeakHandle
*runtime.specialfinalizer
*runtime.specialprofile
*runtime.specialsIter
*runtime.stack
*runtime.stackObject
*runtime.stackObjectBuf
*runtime.stackObjectRecord
*runtime.stackScanState
*runtime.stackWorkBuf
*runtime.stackmap
*runtime.stackt
*runtime.statAggregate
*runtime.statDep
*runtime.stkframe
*runtime.stringStruct
*runtime.sudog
*runtime.sweepClass
*runtime.sweepLocked
*runtime.sweepLocker
*runtime.sysMemStat
*runtime.textsect
*runtime.ticksType
*runtime.timeHistogram
*runtime.timer
*runtime.timerWhen
*runtime.timers
*runtime.timespec
*runtime.tmpBuf
*runtime.traceAdvancerState
*runtime.traceArg
*runtime.traceBuf
*runtime.traceBufQueue
*runtime.traceFrame
*runtime.traceMap
*runtime.traceMapNode
*runtime.traceRegionAlloc
*runtime.traceRegionAllocBlock
*runtime.traceSchedResourceState
*runtime.traceStackTable
*runtime.traceStringTable
*runtime.traceTypeTable
*runtime.traceWriter
*runtime.untracedG·4
*runtime.unwinder
*runtime.usigactiont
*runtime.waitReason
*runtime.waitq
*runtime.wakeableSleep
*runtime.wbBuf
*runtime.workbuf
*runtime.worldStop
*runtime/internal/sys.NotInHeap
*strconv.decimal
*strconv.decimalSlice
*strconv.floatInfo
*strconv.leftCheat
*string
*struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr }
*struct { runtime.gList; runtime.n int32 }
*struct {}
*sudog<bool>
*sudog<int>
*sudog<main.packet>
*sudog<os.Signal>
*sudog<struct {}>
*sudog<time.Time>
*sudog<uint32>
*sync.Map
*sync.Mutex
*sync.Once
*sync.Pool
*sync.RWMutex
*sync.WaitGroup
*sync.eface
*sync.entry
*sync.poolChain
*sync.poolChainElt
*sync.poolDequeue
*sync.poolLocal
*sync.poolLocalInternal
*sync.readOnly
*sync/atomic.Int32
*sync/atomic.Pointer[go.shape.interface {}]
*sync/atomic.Pointer[go.shape.struct { Cur uint64; Max uint64 }]
*sync/atomic.Pointer[go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }]
*sync/atomic.Pointer[go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }]
*sync/atomic.Pointer[go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }]
*sync/atomic.Pointer[go.shape.struct { os.dir uintptr }]
*sync/atomic.Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]
*sync/atomic.Pointer[go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }]
*sync/atomic.Pointer[interface {}]
*sync/atomic.Pointer[internal/bisect.dedup]
*sync/atomic.Pointer[internal/godebug.value]
*sync/atomic.Pointer[math/rand.Rand]
*sync/atomic.Pointer[os.dirInfo]
*sync/atomic.Pointer[sync.poolChainElt]
*sync/atomic.Pointer[sync.readOnly]
*sync/atomic.Pointer[syscall.Rlimit]
*sync/atomic.Uint32
*sync/atomic.Uint64
*sync/atomic.Value
*sync/atomic.efaceWords
*syscall.Errno
*syscall.Iovec
*syscall.Rlimit
*syscall.Signal
*syscall.Stat_t
*syscall.Timespec
*syscall._C_int
*time.Location
*time.Time
*time.Timer
*time.dataIO
*time.fileSizeError
*time.zone
*time.zoneTrans
*uint
*uint16
*uint32
*uint64
*uint8
*uintptr
*unicode.Range16
*unicode.Range32
*unicode.RangeTable
*unsafe.Pointer
<-chan main.packet
<-chan os.Signal
<-chan struct {}
<-chan time.Time
<unspecified>
[0]*go.shape.interface {}
[0]*go.shape.struct { Cur uint64; Max uint64 }
[0]*go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }
[0]*go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }
[0]*go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }
[0]*go.shape.struct { os.dir uintptr }
[0]*go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
[0]*go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }
[0]*interface {}
[0]*internal/bisect.dedup
[0]*internal/godebug.value
[0]*math/rand.Rand
[0]*os.dirInfo
[0]*runtime.PanicNilError
[0]*sync.poolChainElt
[0]*sync.readOnly
[0]*syscall.Rlimit
[0]main.packet
[1000]uintptr
[100]uint8
[101]runtime.finalizer
[1024]uint8
[1024]uintptr
[1048576]runtime.inlinedCall
[1048576]uint8
[106]string
[10]runtime.heldLockInfo
[10]string
[10]uint8
[128]*runtime.mspan
[128]*runtime.sudog
[128][4]uint64
[128]uint8
[128]uintptr
[129]*runtime.g
[129]uint8
[131072]uint16
[136]*runtime.mspan
[136]struct { runtime.mcentral runtime.mcentral; runtime.pad [24]uint8 }
[13]int32
[14]syscall._C_int
[14]uint8
[15]runtime.traceArg
[15]string
[15]uint64
[160]internal/runtime/atomic.Uint64
[16]uint64
[16]uint8
[16]uintptr
[16]unicode/utf8.acceptRange
[171]uint8
[17]string
[1]*[4194304]*runtime.heapArena
[1]*internal/abi.InterfaceType
[1]int
[1]interface {}
[1]internal/abi.InterfaceSwitchCacheEntry
[1]internal/abi.TypeAssertCacheEntry
[1]os.Signal
[1]runtime.stackObjectRecord
[1]runtime.statDep
[1]runtime.traceArg
[1]string
[1]uint32
[1]uint64
[1]uint8
[1]uintptr
[1]unsafe.Pointer
[20]uint64
[20]uint8
[249]uint8
[24]uint8
[252]uintptr
[253]uintptr
[256]runtime.guintptr
[256]uint64
[256]uint8
[2]**runtime.stackWorkBuf
[2]*runtime.profBuf
[2]*runtime.traceBuf
[2][15]runtime.traceArg
[2][3]runtime.traceArg
[2][4]runtime.traceArg
[2][8]runtime.pcvalueCacheEnt
[2]float32
[2]float64
[2]int32
[2]int64
[2]interface {}
[2]internal/runtime/atomic.Pointer[runtime.profBuf]
[2]runtime.Frame
[2]runtime.evacDst
[2]runtime.keventt
[2]runtime.scase
[2]runtime.spanSet
[2]runtime.statDep
[2]runtime.traceArg
[2]runtime.traceBufQueue
[2]runtime.traceStackTable
[2]runtime.traceStringTable
[2]runtime.traceTypeTable
[2]string
[2]syscall._C_int
[2]uint32
[2]uint64
[2]uint8
[2]uintptr
[32]*runtime._defer
[32]runtime.sigTabT
[32]string
[32]uint32
[32]uint64
[32]uint8
[32]uintptr
[33]float64
[33]uint8
[35]runtime.mSpanList
[37]bool
[37]string
[3]int64
[3]internal/runtime/atomic.Uint32
[3]runtime.heapStatsDelta
[3]runtime.memRecordCycle
[3]runtime.mutex
[3]runtime.traceArg
[3]string
[3]uint32
[3]uint64
[3]uint8
[3]uintptr
[4096]uint8
[40]int8
[40]uint8
[4194304]*runtime.heapArena
[4]float64
[4]internal/runtime/atomic.UnsafePointer
[4]runtime.stackfreelist
[4]runtime.traceArg
[4]string
[4]struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 }
[4]uint16
[4]uint64
[4]uint8
[4]uintptr
[50]uint8
[50]uintptr
[512]*internal/abi.ITab
[512]runtime.atomicMSpanPointer
[512]uint8
[512]uintptr
[56]int8
[5][]runtime.pallocSum
[5]int64
[5]string
[5]uint
[5]uint8
[5]uintptr
[5]unsafe.Pointer
[607]int64
[63]runtime.stackObject
[64]runtime.keventt
[64]uint8
[64]uintptr
[65504]uint8
[65520]runtime.gcBits
[65520]uint8
[65536]runtime.scase
[65]int64
[65]uint8
[68]uint16
[68]uint32
[68]uint64
[68]uint8
[696][2]uint64
[6]int
[6]internal/cpu.option
[6]string
[6]uint8
[6]uintptr
[70]uint8
[7]uint64
[800]uint8
[8192]*[8192]runtime.pallocData
[8192]*runtime.mspan
[8192]runtime.pallocData
[8]int8
[8]runtime.pcvalueCacheEnt
[8]string
[8]uint8
[96]uint8
[9]string
[9]uintptr
[9]unsafe.Pointer
[]*internal/abi.ITab
[]*internal/abi.InterfaceType
[]*internal/abi.Type
[]*runtime._defer
[]*runtime.bmap
[]*runtime.dbgVar
[]*runtime.g
[]*runtime.initTask
[]*runtime.moduledata
[]*runtime.mspan
[]*runtime.p
[]*runtime.sudog
[]*sync.Pool
[]error
[]float64
[]go.shape.struct { Key reflect.Value; Value reflect.Value }
[]int
[]int32
[]int64
[]interface {}
[]internal/abi.Imethod
[]internal/abi.InterfaceSwitchCacheEntry
[]internal/abi.Method
[]internal/abi.StructField
[]internal/abi.TypeAssertCacheEntry
[]internal/bisect.cond
[]internal/cpu.option
[]internal/godebugs.Info
[]internal/profilerecord.StackRecord
[]internal/runtime/exithook.Hook
[]key<*uint8>
[]key<chan<- os.Signal>
[]key<context.canceler>
[]key<int32>
[]key<interface {}>
[]key<internal/abi.TypeOff>
[]key<runtime._typePair>
[]key<string>
[]key<uint32>
[]key<uint64>
[]key<unsafe.Pointer>
[]main.packet
[]map[internal/abi.TypeOff]*internal/abi.Type
[]os.Signal
[]os/signal.stopping
[]reflect.abiStep
[]runtime.Frame
[]runtime.addrRange
[]runtime.ancestorInfo
[]runtime.arenaIdx
[]runtime.atomicScavChunkData
[]runtime.functab
[]runtime.liveUserArenaChunk
[]runtime.modulehash
[]runtime.pallocSum
[]runtime.ptabEntry
[]runtime.scase
[]runtime.stackObjectRecord
[]runtime.statDep
[]runtime.textsect
[]runtime.timerWhen
[]runtime.traceArg
[]runtime.traceFrame
[]runtime.untracedG·4
[]strconv.leftCheat
[]string
[]sync.eface
[]sync.poolLocal
[]syscall.Iovec
[]syscall._C_int
[]time.zone
[]time.zoneTrans
[]uint
[]uint16
[]uint32
[]uint64
[]uint8
[]uintptr
[]unicode.Range16
[]unicode.Range32
[]unsafe.Pointer
[]val<*internal/abi.Type>
[]val<*os/signal.handler>
[]val<*sync.entry>
[]val<*unicode.RangeTable>
[]val<[]*internal/abi.Type>
[]val<[]uint8>
[]val<bool>
[]val<int32>
[]val<int>
[]val<runtime.metricData>
[]val<struct {}>
[]val<unsafe.Pointer>
bool
bucket<*uint8,[]uint8>
bucket<chan<- os.Signal,*os/signal.handler>
bucket<context.canceler,struct {}>
bucket<int32,unsafe.Pointer>
bucket<interface {},*sync.entry>
bucket<internal/abi.TypeOff,*internal/abi.Type>
bucket<runtime._typePair,struct {}>
bucket<string,*unicode.RangeTable>
bucket<string,bool>
bucket<string,int>
bucket<string,runtime.metricData>
bucket<uint32,[]*internal/abi.Type>
bucket<uint64,bool>
bucket<unsafe.Pointer,int32>
bytes.readOp
chan bool
chan int
chan main.packet
chan os.Signal
chan struct {}
chan uint32
chan<- main.packet
chan<- os.Signal
complex128
complex64
context.CancelFunc
context.Context
context.afterFuncer
context.backgroundCtx
context.cancelCtx
context.canceler
context.emptyCtx
context.stopCtx
context.stringer
context.timerCtx
context.valueCtx
context.withoutCancelCtx
encoding/binary.littleEndian
error
errors.errorString
float32
float64
fmt.Formatter
fmt.GoStringer
fmt.Stringer
fmt.buffer
fmt.fmt
fmt.fmtFlags
fmt.pp
func()
func() (bool, bool)
func() bool
func() error
func() int32
func() interface {}
func() uint64
func(*internal/abi.ITab)
func(*internal/abi.Type, *internal/abi.ITab)
func(*internal/abi.Type, int, *internal/abi.ITab)
func(*internal/runtime/atomic.Int64) bool
func(*os.file) error
func(*runtime.coro)
func(*runtime.g)
func(*runtime.g) bool
func(*runtime.g, unsafe.Pointer) bool
func(*runtime.p)
func(*runtime.siginfo, *runtime.sigctxt, *runtime.g) bool
func(*runtime.statAggregate, *runtime.metricValue)
func(*uint8, **uint8, **uint8) error
func(<-chan os.Signal, func())
func(bool) int
func(go.shape.struct { Key reflect.Value; Value reflect.Value }, go.shape.struct { Key reflect.Value; Value reflect.Value }) int
func(int)
func(int) error
func(int, []uint8) (int, error)
func(int, int, int) runtime.addrRange
func(int, runtime.addrRange) (int, int)
func(int, runtime.addrRange) runtime.addrRange
func(int64) int64
func(interface {}, interface {}) bool
func(interface {}, uintptr, int64)
func(runtime.offAddr, uintptr)
func(string)
func(string) (string, error)
func(string) func()
func(string, string)
func(string, string) ([]uint8, error)
func(uint) uint8
func(uint64, uint64) uint64
func(uint8, uint8) bool
func(uint8, uint8, uint8)
func(uintptr) (uintptr, int64)
func(uintptr) bool
func(uintptr) int
func(uintptr) uint8
func(uintptr, unsafe.Pointer, int32) int32
func(unsafe.Pointer, uintptr) uintptr
func(unsafe.Pointer, unsafe.Pointer)
func(unsafe.Pointer, unsafe.Pointer) bool
func(unsafe.Pointer, unsafe.Pointer) int32
go.shape.[]internal/fmtsort.KeyValue
go.shape.[]uint16
go.shape.[]uint32
go.shape.[]uint8
go.shape.a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7
go.shape.float64
go.shape.func()
go.shape.func(string) func()
go.shape.func(string, string)
go.shape.int64
go.shape.interface {}
go.shape.string
go.shape.struct { Cur uint64; Max uint64 }
go.shape.struct { Key reflect.Value; Value reflect.Value }
go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }
go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }
go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }
go.shape.struct { os.dir uintptr }
go.shape.struct { runtime.heap bool; runtime.rangefunc bool; runtime.sp uintptr; runtime.pc uintptr; runtime.fn func(); runtime.link *runtime._defer; runtime.head *internal/runtime/atomic.Pointer[runtime._defer] }
go.shape.struct { runtime.lfnode; runtime.popped internal/runtime/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }
go.shape.struct { runtime.r runtime.profAtomic; runtime.w runtime.profAtomic; runtime.overflow internal/runtime/atomic.Uint64; runtime.overflowTime internal/runtime/atomic.Uint64; runtime.eof internal/runtime/atomic.Uint32; runtime.hdrsize uintptr; runtime.data []uint64; runtime.tags []unsafe.Pointer; runtime.rNext runtime.profIndex; runtime.overflowBuf []uint64; runtime.wait runtime.note }
go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }
go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }
go.shape.uint16
go.shape.uint32
go.shape.uint64
go.shape.uintptr
hash<*uint8,[]uint8>
hash<chan<- os.Signal,*os/signal.handler>
hash<context.canceler,struct {}>
hash<int32,unsafe.Pointer>
hash<interface {},*sync.entry>
hash<internal/abi.TypeOff,*internal/abi.Type>
hash<runtime._typePair,struct {}>
hash<string,*unicode.RangeTable>
hash<string,bool>
hash<string,int>
hash<string,runtime.metricData>
hash<uint32,[]*internal/abi.Type>
hash<uint64,bool>
hash<unsafe.Pointer,int32>
hchan<bool>
hchan<int>
hchan<main.packet>
hchan<os.Signal>
hchan<struct {}>
hchan<time.Time>
hchan<uint32>
int
int16
int32
int64
int8
interface { Is(error) bool }
interface { M() }
interface { Unwrap() []error }
interface { Unwrap() error }
interface {}
internal/abi.ArrayType
internal/abi.ChanDir
internal/abi.ChanType
internal/abi.EmptyInterface
internal/abi.FuncFlag
internal/abi.FuncID
internal/abi.FuncType
internal/abi.ITab
internal/abi.Imethod
internal/abi.IntArgRegBitmap
internal/abi.InterfaceSwitch
internal/abi.InterfaceSwitchCache
internal/abi.InterfaceSwitchCacheEntry
internal/abi.InterfaceType
internal/abi.Kind
internal/abi.MapType
internal/abi.Method
internal/abi.Name
internal/abi.NameOff
internal/abi.PtrType
internal/abi.RF_State
internal/abi.RegArgs
internal/abi.SliceType
internal/abi.StructField
internal/abi.StructType
internal/abi.TFlag
internal/abi.TextOff
internal/abi.Type
internal/abi.TypeAssert
internal/abi.TypeAssertCache
internal/abi.TypeAssertCacheEntry
internal/abi.TypeOff
internal/abi.UncommonType
internal/bisect.Matcher
internal/bisect.Writer
internal/bisect.cond
internal/bisect.dedup
internal/bisect.parseError
internal/chacha8rand.State
internal/cpu.CacheLinePad
internal/cpu.option
internal/fmtsort.KeyValue
internal/fmtsort.SortedMap
internal/goarch.ArchFamilyType
internal/godebug.Setting
internal/godebug.runtimeStderr
internal/godebug.setting
internal/godebug.value
internal/godebugs.Info
internal/poll.DeadlineExceededError
internal/poll.FD
internal/poll.SysFile
internal/poll.errNetClosing
internal/poll.fdMutex
internal/poll.pollDesc
internal/profilerecord.StackRecord
internal/reflectlite.Type
internal/reflectlite.flag
internal/reflectlite.rtype
internal/runtime/atomic.Bool
internal/runtime/atomic.Float64
internal/runtime/atomic.Int32
internal/runtime/atomic.Int64
internal/runtime/atomic.Pointer[func()]
internal/runtime/atomic.Pointer[func(string) func()]
internal/runtime/atomic.Pointer[func(string, string)]
internal/runtime/atomic.Pointer[go.shape.a43ffc4a4831591b9de7c1ed0cb93795c1209295578eacf0b17a0150abe1d3e7]
internal/runtime/atomic.Pointer[go.shape.func()]
internal/runtime/atomic.Pointer[go.shape.func(string) func()]
internal/runtime/atomic.Pointer[go.shape.func(string, string)]
internal/runtime/atomic.Pointer[go.shape.string]
internal/runtime/atomic.Pointer[go.shape.struct { runtime.heap bool; runtime.rangefunc bool; runtime.sp uintptr; runtime.pc uintptr; runtime.fn func(); runtime.link *runtime._defer; runtime.head *internal/runtime/atomic.Pointer[runtime._defer] }]
internal/runtime/atomic.Pointer[go.shape.struct { runtime.lfnode; runtime.popped internal/runtime/atomic.Uint32; runtime.spans [512]runtime.atomicMSpanPointer }]
internal/runtime/atomic.Pointer[go.shape.struct { runtime.r runtime.profAtomic; runtime.w runtime.profAtomic; runtime.overflow internal/runtime/atomic.Uint64; runtime.overflowTime internal/runtime/atomic.Uint64; runtime.eof internal/runtime/atomic.Uint32; runtime.hdrsize uintptr; runtime.data []uint64; runtime.tags []unsafe.Pointer; runtime.rNext runtime.profIndex; runtime.overflowBuf []uint64; runtime.wait runtime.note }]
internal/runtime/atomic.Pointer[runtime._defer]
internal/runtime/atomic.Pointer[runtime.g]
internal/runtime/atomic.Pointer[runtime.profBuf]
internal/runtime/atomic.Pointer[runtime.spanSetBlock]
internal/runtime/atomic.Pointer[string]
internal/runtime/atomic.Uint32
internal/runtime/atomic.Uint64
internal/runtime/atomic.Uint8
internal/runtime/atomic.Uintptr
internal/runtime/atomic.UnsafePointer
internal/runtime/atomic.align64
internal/runtime/atomic.noCopy
internal/runtime/exithook.Hook
internal/testlog.Interface
internal/unsafeheader.Slice
internal/unsafeheader.String
io.Reader
io.Writer
io.discard
io/fs.FileInfo
io/fs.FileMode
io/fs.PathError
main.packet
map[*uint8][]uint8
map[chan<- os.Signal]*os/signal.handler
map[context.canceler]struct {}
map[int32]unsafe.Pointer
map[interface {}]*sync.entry
map[internal/abi.TypeOff]*internal/abi.Type
map[runtime._typePair]struct {}
map[string]*unicode.RangeTable
map[string]bool
map[string]int
map[string]runtime.metricData
map[uint32][]*internal/abi.Type
map[uint64]bool
map[unsafe.Pointer]int32
math/rand.Rand
math/rand.Source
math/rand.Source64
math/rand.lockedSource
math/rand.rngSource
math/rand.runtimeSource
noalg.*struct { F uintptr; R *internal/godebug.Setting }
noalg.*struct { F uintptr; R *sync/atomic.Uint64 }
noalg.*struct { F uintptr; R runtime.metricReader }
noalg.*struct { F uintptr; X0 *context.cancelCtx }
noalg.*struct { F uintptr; X0 *fmt.pp; X1 interface {}; X2 int32 }
noalg.*struct { F uintptr; X0 *internal/abi.Type }
noalg.*struct { F uintptr; X0 *internal/godebug.Setting }
noalg.*struct { F uintptr; X0 *internal/poll.FD }
noalg.*struct { F uintptr; X0 *os/signal.handler }
noalg.*struct { F uintptr; X0 *sync.Mutex }
noalg.*struct { F uintptr; X0 *sync.RWMutex }
noalg.*struct { F uintptr; X0 *sync.WaitGroup }
noalg.*struct { F uintptr; X0 *sync/atomic.Uint32 }
noalg.*struct { F uintptr; X0 context.Context; X1 *sync.WaitGroup; X2 <-chan main.packet }
noalg.*struct { F uintptr; X0 context.Context; X1 *sync.WaitGroup; X2 chan<- main.packet }
noalg.*struct { F uintptr; X0 context.Context; X1 context.canceler }
noalg.*struct { F uintptr; X0 context.canceler; X1 context.Context }
noalg.*struct { F uintptr; X0 func(<-chan os.Signal, func()); X1 <-chan os.Signal; X2 func() }
noalg.*struct { F uintptr; X0 int; X1 *syscall.Stat_t }
noalg.*struct { F uintptr; X0 map[string]bool }
noalg.*struct { F uintptr; X0 string; X1 *os.fileStat }
noalg.*struct { F uintptr; X0 uintptr }
noalg.[8][]*internal/abi.Type
noalg.[8]bool
noalg.[8]runtime._typePair
noalg.[8]string
noalg.[8]struct {}
noalg.[8]uint32
noalg.map.bucket[runtime._typePair]struct {}
noalg.map.bucket[string]bool
noalg.map.bucket[uint32][]*internal/abi.Type
noalg.struct { F uintptr; R *internal/godebug.Setting }
noalg.struct { F uintptr; R *runtime.itabTableType }
noalg.struct { F uintptr; R *sync/atomic.Uint64 }
noalg.struct { F uintptr; R runtime.metricReader }
noalg.struct { F uintptr; X0 **runtime.m }
noalg.struct { F uintptr; X0 **runtime.m; X1 uintptr }
noalg.struct { F uintptr; X0 **runtime.mcache }
noalg.struct { F uintptr; X0 **runtime.mspan }
noalg.struct { F uintptr; X0 **runtime.mspan; X1 uintptr }
noalg.struct { F uintptr; X0 **runtime.notInHeap; X1 uintptr; X2 uintptr; X3 *runtime.sysMemStat }
noalg.struct { F uintptr; X0 *bool }
noalg.struct { F uintptr; X0 *context.cancelCtx }
noalg.struct { F uintptr; X0 *fmt.pp; X1 interface {}; X2 int32 }
noalg.struct { F uintptr; X0 *int }
noalg.struct { F uintptr; X0 *int64; X1 *runtime.worldStop }
noalg.struct { F uintptr; X0 *int; X1 *int; X2 *int; X3 *int }
noalg.struct { F uintptr; X0 *int; X1 *int; X2 []uintptr }
noalg.struct { F uintptr; X0 *internal/abi.Type }
noalg.struct { F uintptr; X0 *internal/godebug.Setting }
noalg.struct { F uintptr; X0 *internal/poll.FD }
noalg.struct { F uintptr; X0 *internal/runtime/atomic.Int32 }
noalg.struct { F uintptr; X0 *internal/runtime/atomic.Uint64 }
noalg.struct { F uintptr; X0 *os/signal.handler }
noalg.struct { F uintptr; X0 *runtime._panic; X1 *bool; X2 *runtime.g; X3 uintptr; X4 uintptr }
noalg.struct { F uintptr; X0 *runtime.eface }
noalg.struct { F uintptr; X0 *runtime.eface; X1 *runtime.eface; X2 uintptr; X3 *internal/abi.Type; X4 *internal/abi.PtrType }
noalg.struct { F uintptr; X0 *runtime.funcval; X1 *runtime.g; X2 uintptr }
noalg.struct { F uintptr; X0 *runtime.g }
noalg.struct { F uintptr; X0 *runtime.g; X1 *int64; X2 *runtime.gcWork }
noalg.struct { F uintptr; X0 *runtime.g; X1 *runtime._panic; X2 *bool }
noalg.struct { F uintptr; X0 *runtime.g; X1 *runtime.g; X2 int32 }
noalg.struct { F uintptr; X0 *runtime.g; X1 *runtime.p }
noalg.struct { F uintptr; X0 *runtime.g; X1 *runtime.untracedG·4; X2 uintptr }
noalg.struct { F uintptr; X0 *runtime.g; X1 int }
noalg.struct { F uintptr; X0 *runtime.g; X1 int32 }
noalg.struct { F uintptr; X0 *runtime.g; X1 int64 }
noalg.struct { F uintptr; X0 *runtime.g; X1 int; X2 []uintptr }
noalg.struct { F uintptr; X0 *runtime.g; X1 runtime.stwReason }
noalg.struct { F uintptr; X0 *runtime.g; X1 uintptr; X2 uintptr }
noalg.struct { F uintptr; X0 *runtime.g; X1 uintptr; X2 uintptr; X3 *uint32 }
noalg.struct { F uintptr; X0 *runtime.hchan }
noalg.struct { F uintptr; X0 *runtime.m }
noalg.struct { F uintptr; X0 *runtime.mcache }
noalg.struct { F uintptr; X0 *runtime.mheap; X1 uintptr; X2 **runtime.mspan; X3 runtime.spanClass }
noalg.struct { F uintptr; X0 *runtime.mspan }
noalg.struct { F uintptr; X0 *runtime.mspan; X1 *runtime.mheap }
noalg.struct { F uintptr; X0 *runtime.p }
noalg.struct { F uintptr; X0 *runtime.pageAlloc }
noalg.struct { F uintptr; X0 *runtime.pthreadattr; X1 *runtime.m }
noalg.struct { F uintptr; X0 *runtime.rwmutex }
noalg.struct { F uintptr; X0 *runtime.stkframe; X1 uintptr }
noalg.struct { F uintptr; X0 *runtime.timer; X1 int64 }
noalg.struct { F uintptr; X0 *runtime.traceBuf; X1 uintptr }
noalg.struct { F uintptr; X0 *runtime.traceStringTable; X1 uintptr }
noalg.struct { F uintptr; X0 *runtime.traceStringTable; X1 uintptr; X2 uint64; X3 *string }
noalg.struct { F uintptr; X0 *runtime.traceWriter }
noalg.struct { F uintptr; X0 *runtime.unwinder; X1 uintptr; X2 uintptr; X3 uintptr; X4 *runtime.g; X5 runtime.unwindFlags }
noalg.struct { F uintptr; X0 *runtime.worldStop }
noalg.struct { F uintptr; X0 *struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr } }
noalg.struct { F uintptr; X0 *sync.Mutex }
noalg.struct { F uintptr; X0 *sync.RWMutex }
noalg.struct { F uintptr; X0 *sync.WaitGroup }
noalg.struct { F uintptr; X0 *sync/atomic.Uint32 }
noalg.struct { F uintptr; X0 *uintptr; X1 *int; X2 []uintptr }
noalg.struct { F uintptr; X0 *uintptr; X1 *runtime.pageAlloc; X2 runtime.chunkIdx; X3 uint; X4 uintptr }
noalg.struct { F uintptr; X0 *uintptr; X1 *string }
noalg.struct { F uintptr; X0 []runtime.scase; X1 []uint16 }
noalg.struct { F uintptr; X0 bool }
noalg.struct { F uintptr; X0 context.Context; X1 *sync.WaitGroup; X2 <-chan main.packet }
noalg.struct { F uintptr; X0 context.Context; X1 *sync.WaitGroup; X2 chan<- main.packet }
noalg.struct { F uintptr; X0 context.Context; X1 context.canceler }
noalg.struct { F uintptr; X0 context.canceler; X1 context.Context }
noalg.struct { F uintptr; X0 func(<-chan os.Signal, func()); X1 <-chan os.Signal; X2 func() }
noalg.struct { F uintptr; X0 func(int, runtime.addrRange) (int, int); X1 func(int, int, int) runtime.addrRange }
noalg.struct { F uintptr; X0 int64 }
noalg.struct { F uintptr; X0 int64; X1 runtime.worldStop }
noalg.struct { F uintptr; X0 int; X1 *syscall.Stat_t }
noalg.struct { F uintptr; X0 int; X1 []internal/abi.InterfaceSwitchCacheEntry }
noalg.struct { F uintptr; X0 int; X1 []internal/abi.TypeAssertCacheEntry }
noalg.struct { F uintptr; X0 map[string]bool }
noalg.struct { F uintptr; X0 runtime.traceLocker }
noalg.struct { F uintptr; X0 runtime.traceLocker; X1 *runtime.g }
noalg.struct { F uintptr; X0 runtime.traceLocker; X1 bool }
noalg.struct { F uintptr; X0 runtime.traceWriter; X1 uintptr }
noalg.struct { F uintptr; X0 runtime.waitReason; X1 func(*runtime.p) }
noalg.struct { F uintptr; X0 runtime.worldStop }
noalg.struct { F uintptr; X0 string }
noalg.struct { F uintptr; X0 string; X1 *os.fileStat }
noalg.struct { F uintptr; X0 uint32; X1 uint32 }
noalg.struct { F uintptr; X0 uintptr }
noalg.struct { F uintptr; X0 uintptr; X1 *[]runtime.untracedG·4 }
noalg.struct { F uintptr; X0 uintptr; X1 *runtime.g }
noalg.struct { F uintptr; X0 uintptr; X1 *runtime.mspan }
noalg.struct { F uintptr; X0 uintptr; X1 *runtime.mspan; X2 *bool }
noalg.struct { F uintptr; X0 uintptr; X1 bool }
noalg.struct { F uintptr; X0 uintptr; X1 uintptr; X2 *runtime.g; X3 *int; X4 int; X5 *runtime.mLockProfile }
noalg.struct { F uintptr; X0 uintptr; X1 uintptr; X2 *runtime.g; X3 *int; X4 int; X5 []uintptr }
noalg.struct { F uintptr; X0 uintptr; X1 uintptr; X2 uintptr; X3 *runtime.g }
noalg.struct { F uintptr; X0 unsafe.Pointer; X1 *runtime.bucket }
noalg.struct { F uintptr; X0 unsafe.Pointer; X1 func(uint8, uint8) bool }
noalg.struct { F uintptr; X0 unsafe.Pointer; X1 int32; X2 uint8 }
os.File
os.Signal
os.SyscallError
os.dirInfo
os.file
os.fileStat
os.newFileKind
os.processMode
os.processStatus
os.readdirMode
os/signal.handler
os/signal.stopping
reflect.ChanDir
reflect.Kind
reflect.MapIter
reflect.Method
reflect.SelectDir
reflect.StructField
reflect.StructTag
reflect.Type
reflect.Value
reflect.ValueError
reflect.abiDesc
reflect.abiSeq
reflect.abiStep
reflect.abiStepKind
reflect.bitVector
reflect.flag
reflect.hiter
reflect.interfaceType
reflect.layoutKey
reflect.layoutType
reflect.makeFuncCtxt
reflect.mapType
reflect.methodValue
reflect.nonEmptyInterface
reflect.ptrType
reflect.rtype
reflect.sliceType
reflect.structType
runtime.Frame
runtime.Frames
runtime.Func
runtime.PanicNilError
runtime.Pinner
runtime.TypeAssertionError
runtime._defer
runtime._func
runtime._panic
runtime._typePair
runtime.activeSweep
runtime.addrRange
runtime.addrRanges
runtime.adjustinfo
runtime.ancestorInfo
runtime.arenaHint
runtime.arenaIdx
runtime.atomicHeadTailIndex
runtime.atomicMSpanPointer
runtime.atomicOffAddr
runtime.atomicScavChunkData
runtime.atomicSpanSetSpinePointer
runtime.bitvector
runtime.blockRecord
runtime.bmap
runtime.boundsError
runtime.boundsErrorCode
runtime.bucket
runtime.bucketType
runtime.buckhashArray
runtime.cgoCallers
runtime.cgoSymbolizerArg
runtime.cgoTracebackArg
runtime.cgothreadstart
runtime.checkmarksMap
runtime.chunkIdx
runtime.consistentHeapStats
runtime.coro
runtime.cpuProfile
runtime.cpuStats
runtime.cpuStatsAggregate
runtime.dbgVar
runtime.debugCallWrapArgs
runtime.dlogPerM
runtime.eface
runtime.errorAddressString
runtime.errorString
runtime.evacDst
runtime.finalizer
runtime.finblock
runtime.findfuncbucket
runtime.fixalloc
runtime.forcegcstate
runtime.funcInfo
runtime.funcinl
runtime.functab
runtime.funcval
runtime.g
runtime.gList
runtime.gQueue
runtime.gTraceState
runtime.gcBgMarkWorkerNode
runtime.gcBits
runtime.gcBitsArena
runtime.gcCPULimiterState
runtime.gcControllerState
runtime.gcDrainFlags
runtime.gcMarkWorkerMode
runtime.gcMode
runtime.gcStatsAggregate
runtime.gcTrigger
runtime.gcTriggerKind
runtime.gcWork
runtime.gclink
runtime.gclinkptr
runtime.gobuf
runtime.godebugInc
runtime.goroutineProfileState
runtime.goroutineProfileStateHolder
runtime.gsignalStack
runtime.guintptr
runtime.hchan
runtime.headTailIndex
runtime.heapArena
runtime.heapStatsAggregate
runtime.heapStatsDelta
runtime.heldLockInfo
runtime.hex
runtime.hiter
runtime.hmap
runtime.iface
runtime.initTask
runtime.inlineFrame
runtime.inlineUnwinder
runtime.inlinedCall
runtime.itabTableType
runtime.keventt
runtime.lfnode
runtime.lfstack
runtime.libcall
runtime.limiterEvent
runtime.limiterEventStamp
runtime.limiterEventType
runtime.linearAlloc
runtime.liveUserArenaChunk
runtime.lockRank
runtime.lockRankStruct
runtime.lockTimer
runtime.m
runtime.mLockProfile
runtime.mOS
runtime.mProfCycleHolder
runtime.mSpanList
runtime.mSpanState
runtime.mSpanStateBox
runtime.mTraceState
runtime.mapextra
runtime.markBits
runtime.mcache
runtime.mcentral
runtime.memRecord
runtime.memRecordCycle
runtime.metricData
runtime.metricFloat64Histogram
runtime.metricKind
runtime.metricReader
runtime.metricValue
runtime.mheap
runtime.mlink
runtime.moduledata
runtime.modulehash
runtime.mspan
runtime.mstats
runtime.muintptr
runtime.mutex
runtime.notInHeap
runtime.notInHeapSlice
runtime.note
runtime.offAddr
runtime.p
runtime.pMask
runtime.pTraceState
runtime.pageAlloc
runtime.pageBits
runtime.pageCache
runtime.pallocBits
runtime.pallocData
runtime.pallocSum
runtime.pcHeader
runtime.pcvalueCache
runtime.pcvalueCacheEnt
runtime.persistentAlloc
runtime.piController
runtime.pinState
runtime.pinner
runtime.pinnerBits
runtime.plainError
runtime.pollCache
runtime.pollDesc
runtime.pollInfo
runtime.profAtomic
runtime.profBuf
runtime.profBufReadMode
runtime.profIndex
runtime.ptabEntry
runtime.pthread
runtime.pthreadattr
runtime.pthreadcond
runtime.pthreadcondattr
runtime.pthreadmutex
runtime.pthreadmutexattr
runtime.puintptr
runtime.randomEnum
runtime.randomOrder
runtime.reflectMethodValue
runtime.regs64
runtime.rtype
runtime.rwmutex
runtime.savedOpenDeferState
runtime.scase
runtime.scavChunkData
runtime.scavChunkFlags
runtime.scavengeIndex
runtime.scavengerState
runtime.schedt
runtime.selectDir
runtime.semTable
runtime.semaProfileFlags
runtime.semaRoot
runtime.sigTabT
runtime.sigctxt
runtime.siginfo
runtime.sigset
runtime.slice
runtime.spanAllocType
runtime.spanClass
runtime.spanSet
runtime.spanSetBlock
runtime.spanSetBlockAlloc
runtime.spanSetSpinePointer
runtime.special
runtime.specialPinCounter
runtime.specialReachable
runtime.specialWeakHandle
runtime.specialfinalizer
runtime.specialprofile
runtime.specialsIter
runtime.srcFunc
runtime.stack
runtime.stackObject
runtime.stackObjectBuf
runtime.stackObjectBufHdr
runtime.stackObjectRecord
runtime.stackScanState
runtime.stackWorkBuf
runtime.stackWorkBufHdr
runtime.stackfreelist
runtime.stackmap
runtime.stackpoolItem
runtime.stackt
runtime.statAggregate
runtime.statDep
runtime.statDepSet
runtime.stkframe
runtime.stringStruct
runtime.stringStructDWARF
runtime.stringer
runtime.stwReason
runtime.sudog
runtime.suspendGState
runtime.sweepClass
runtime.sweepLocked
runtime.sweepLocker
runtime.sweepdata
runtime.sysMemStat
runtime.sysStatsAggregate
runtime.sysmontick
runtime.taggedPointer
runtime.textsect
runtime.throwType
runtime.ticksType
runtime.timeHistogram
runtime.timer
runtime.timerWhen
runtime.timers
runtime.timespec
runtime.tmpBuf
runtime.traceAdvancerState
runtime.traceArg
runtime.traceBlockReason
runtime.traceBuf
runtime.traceBufHeader
runtime.traceBufQueue
runtime.traceEv
runtime.traceEventWriter
runtime.traceExpWriter
runtime.traceExperiment
runtime.traceFrame
runtime.traceGoStatus
runtime.traceGoStopReason
runtime.traceLocker
runtime.traceMap
runtime.traceMapNode
runtime.traceProcStatus
runtime.traceRegionAlloc
runtime.traceRegionAllocBlock
runtime.traceRegionAllocBlockHeader
runtime.traceSchedResourceState
runtime.traceStackTable
runtime.traceStringTable
runtime.traceTime
runtime.traceTypeTable
runtime.traceWriter
runtime.tracestat
runtime.typePointers
runtime.untracedG·4
runtime.unwindFlags
runtime.unwinder
runtime.usigactiont
runtime.waitReason
runtime.waitq
runtime.wakeableSleep
runtime.wbBuf
runtime.winlibcall
runtime.workType
runtime.workbuf
runtime.workbufhdr
runtime.worldStop
runtime/internal/sys.NotInHeap
runtime/internal/sys.nih
slices.sortedHint
strconv.decimal
strconv.decimalSlice
strconv.floatInfo
strconv.leftCheat
string
struct { internal/cpu._ internal/cpu.CacheLinePad; HasAES bool; HasADX bool; HasAVX bool; HasAVX2 bool; HasAVX512F bool; HasAVX512BW bool; HasAVX512VL bool; HasBMI1 bool; HasBMI2 bool; HasERMS bool; HasFMA bool; HasOSXSAVE bool; HasPCLMULQDQ bool; HasPOPCNT bool; HasRDTSCP bool; HasSHA bool; HasSSE3 bool; HasSSSE3 bool; HasSSE41 bool; HasSSE42 bool; internal/cpu._ internal/cpu.CacheLinePad }
struct { internal/testlog.mu sync.Mutex; internal/testlog.val bool }
struct { reflect.b bool; reflect.x interface {} }
struct { runtime.addr unsafe.Pointer; runtime.n uintptr; runtime.prot int32; runtime.flags int32; runtime.fd int32; runtime.off uint32; runtime.ret1 unsafe.Pointer; runtime.ret2 int }
struct { runtime.arenaHints *runtime.arenaHint; runtime.quarantineList runtime.mSpanList; runtime.readyList runtime.mSpanList }
struct { runtime.base runtime.offAddr; runtime.bound runtime.offAddr }
struct { runtime.base uintptr; runtime.end uintptr }
struct { runtime.cgocheck int32; runtime.clobberfree int32; runtime.disablethp int32; runtime.dontfreezetheworld int32; runtime.efence int32; runtime.gccheckmark int32; runtime.gcpacertrace int32; runtime.gcshrinkstackoff int32; runtime.gcstoptheworld int32; runtime.gctrace int32; runtime.invalidptr int32; runtime.madvdontneed int32; runtime.runtimeContentionStacks internal/runtime/atomic.Int32; runtime.scavtrace int32; runtime.scheddetail int32; runtime.schedtrace int32; runtime.tracebackancestors int32; runtime.asyncpreemptoff int32; runtime.harddecommit int32; runtime.adaptivestackstart int32; runtime.tracefpunwindoff int32; runtime.traceadvanceperiod int32; runtime.traceCheckStackOwnership int32; runtime.profstackdepth int32; runtime.malloc bool; runtime.inittrace int32; runtime.sbrk int32; runtime.traceallocfree internal/runtime/atomic.Int32; runtime.panicnil internal/runtime/atomic.Int32; runtime.asynctimerchan internal/runtime/atomic.Int32 }
struct { runtime.enabled bool; runtime.pad [3]uint8; runtime.alignme uint64 }
struct { runtime.fd int32; runtime.cmd int32; runtime.arg int32; runtime.ret int32; runtime.errno int32 }
struct { runtime.fill uint64; runtime.capacity uint64 }
struct { runtime.fn uintptr; runtime.a1 uintptr; runtime.a2 uintptr; runtime.a3 uintptr; runtime.a4 uintptr; runtime.a5 uintptr; runtime.a6 uintptr; runtime.r1 uintptr; runtime.r2 uintptr; runtime.err uintptr }
struct { runtime.fn uintptr; runtime.a1 uintptr; runtime.a2 uintptr; runtime.a3 uintptr; runtime.r1 uintptr; runtime.r2 uintptr; runtime.err uintptr }
struct { runtime.gList; runtime.n int32 }
struct { runtime.gcPercentGoal internal/runtime/atomic.Uint64; runtime.memoryLimitGoal internal/runtime/atomic.Uint64; runtime.assistTime internal/runtime/atomic.Int64; runtime.backgroundTime internal/runtime/atomic.Int64 }
struct { runtime.index runtime.scavengeIndex; runtime.releasedBg internal/runtime/atomic.Uintptr; runtime.releasedEager internal/runtime/atomic.Uintptr }
struct { runtime.item runtime.stackpoolItem; runtime._ [40]uint8 }
struct { runtime.len int; runtime.buf [128]*runtime.mspan }
struct { runtime.lock runtime.mutex; runtime.free *runtime.gcBitsArena; runtime.next *runtime.gcBitsArena; runtime.current *runtime.gcBitsArena; runtime.previous *runtime.gcBitsArena }
struct { runtime.lock runtime.mutex; runtime.free [35]runtime.mSpanList }
struct { runtime.lock runtime.mutex; runtime.free runtime.mSpanList; runtime.busy runtime.mSpanList }
struct { runtime.lock runtime.mutex; runtime.list runtime.gList }
struct { runtime.lock runtime.mutex; runtime.newm runtime.muintptr; runtime.waiting bool; runtime.wake runtime.note; runtime.haveTemplateThread uint32 }
struct { runtime.lock runtime.mutex; runtime.next int32; runtime.m map[int32]unsafe.Pointer; runtime.minv map[unsafe.Pointer]int32 }
struct { runtime.lock runtime.mutex; runtime.q runtime.gQueue }
struct { runtime.lock runtime.mutex; runtime.reading *runtime.traceBuf; runtime.empty *runtime.traceBuf; runtime.full [2]runtime.traceBufQueue; runtime.workAvailable internal/runtime/atomic.Bool; runtime.readerGen internal/runtime/atomic.Uintptr; runtime.flushedGen internal/runtime/atomic.Uintptr; runtime.headerWritten bool; runtime.doneSema [2]uint32; runtime.stackTab [2]runtime.traceStackTable; runtime.stringTab [2]runtime.traceStringTable; runtime.typeTab [2]runtime.traceTypeTable; runtime.cpuLogRead [2]*runtime.profBuf; runtime.signalLock internal/runtime/atomic.Uint32; runtime.cpuLogWrite [2]internal/runtime/atomic.Pointer[runtime.profBuf]; runtime.cpuSleep *runtime.wakeableSleep; runtime.cpuLogDone <-chan struct {}; runtime.cpuBuf [2]*runtime.traceBuf; runtime.reader internal/runtime/atomic.Pointer[runtime.g]; runtime.markWorkerLabels [2][4]runtime.traceArg; runtime.goStopReasons [2][3]runtime.traceArg; runtime.goBlockReasons [2][15]runtime.traceArg; runtime.enabled bool; runtime.enabledWithAllocFree bool; runtime.gen internal/runtime/atomic.Uintptr; runtime.lastNonZeroGen uintptr; runtime.shutdown internal/runtime/atomic.Bool; runtime.exitingSyscall internal/runtime/atomic.Int32; runtime.seqGC uint64; runtime.minPageHeapAddr uint64; runtime.debugMalloc bool }
struct { runtime.lock runtime.mutex; runtime.reuse []runtime.liveUserArenaChunk; runtime.fault []runtime.liveUserArenaChunk }
struct { runtime.lock runtime.mutex; runtime.seed [32]uint8; runtime.state internal/chacha8rand.State; runtime.init bool }
struct { runtime.lock runtime.mutex; runtime.stack runtime.gList; runtime.noStack runtime.gList; runtime.n int32 }
struct { runtime.mcentral runtime.mcentral; runtime.pad [24]uint8 }
struct { runtime.mutex; runtime.persistentAlloc }
struct { runtime.note runtime.note; runtime.mask [1]uint32; runtime.wanted [1]uint32; runtime.ignored [1]uint32; runtime.recv [1]uint32; runtime.state internal/runtime/atomic.Uint32; runtime.delivering internal/runtime/atomic.Uint32; runtime.inuse bool }
struct { runtime.root runtime.semaRoot; runtime.pad [40]uint8 }
struct { runtime.sema uint32; runtime.active bool; runtime.offset internal/runtime/atomic.Int64; runtime.records []internal/profilerecord.StackRecord; runtime.labels []unsafe.Pointer }
struct { runtime.signalLock internal/runtime/atomic.Uint32; runtime.hz internal/runtime/atomic.Int32 }
struct { runtime.t int64; runtime.numer uint32; runtime.denom uint32 }
struct { runtime.user bool; runtime.runnable runtime.gQueue; runtime.n int32 }
struct { sync.Mutex; os/signal.m map[chan<- os.Signal]*os/signal.handler; os/signal.ref [65]int64; os/signal.stopping []os/signal.stopping }
struct {}
sudog<bool>
sudog<int>
sudog<main.packet>
sudog<os.Signal>
sudog<struct {}>
sudog<time.Time>
sudog<uint32>
sync.Map
sync.Mutex
sync.Once
sync.Pool
sync.RWMutex
sync.WaitGroup
sync.dequeueNil
sync.eface
sync.entry
sync.noCopy
sync.notifyList
sync.poolChain
sync.poolChainElt
sync.poolDequeue
sync.poolLocal
sync.poolLocalInternal
sync.readOnly
sync/atomic.Int32
sync/atomic.Pointer[go.shape.interface {}]
sync/atomic.Pointer[go.shape.struct { Cur uint64; Max uint64 }]
sync/atomic.Pointer[go.shape.struct { internal/bisect.recent [128][4]uint64; internal/bisect.mu sync.Mutex; internal/bisect.m map[uint64]bool }]
sync/atomic.Pointer[go.shape.struct { internal/godebug.text string; internal/godebug.bisect *internal/bisect.Matcher }]
sync/atomic.Pointer[go.shape.struct { math/rand.src math/rand.Source; math/rand.s64 math/rand.Source64; math/rand.readVal int64; math/rand.readPos int8 }]
sync/atomic.Pointer[go.shape.struct { os.dir uintptr }]
sync/atomic.Pointer[go.shape.struct { sync.m map[interface {}]*sync.entry; sync.amended bool }]
sync/atomic.Pointer[go.shape.struct { sync.poolDequeue; sync.next sync/atomic.Pointer[sync.poolChainElt]; sync.prev sync/atomic.Pointer[sync.poolChainElt] }]
sync/atomic.Pointer[interface {}]
sync/atomic.Pointer[internal/bisect.dedup]
sync/atomic.Pointer[internal/godebug.value]
sync/atomic.Pointer[math/rand.Rand]
sync/atomic.Pointer[os.dirInfo]
sync/atomic.Pointer[sync.poolChainElt]
sync/atomic.Pointer[sync.readOnly]
sync/atomic.Pointer[syscall.Rlimit]
sync/atomic.Uint32
sync/atomic.Uint64
sync/atomic.Value
sync/atomic.align64
sync/atomic.efaceWords
sync/atomic.noCopy
syscall.Errno
syscall.Iovec
syscall.Rlimit
syscall.Signal
syscall.Stat_t
syscall.Timespec
syscall._C_int
time.Duration
time.Location
time.Month
time.Time
time.Timer
time.Weekday
time.dataIO
time.fileSizeError
time.rule
time.ruleKind
time.zone
time.zoneTrans
uint
uint16
uint32
uint64
uint8
uintptr
unicode.Range16
unicode.Range32
unicode.RangeTable
unicode/utf8.acceptRange
unsafe.Pointer
waitq<bool>
waitq<int>
waitq<main.packet>
waitq<os.Signal>
waitq<struct {}>
waitq<time.Time>
waitq<uint32>
(dlv) q
